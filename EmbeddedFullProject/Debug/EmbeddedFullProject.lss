
EmbeddedFullProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001502  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001a  00800060  00001502  00001596  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000025  0080007a  0080007a  000015b0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000015b0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000160c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002f8  00000000  00000000  00001648  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002c70  00000000  00000000  00001940  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e9e  00000000  00000000  000045b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001560  00000000  00000000  0000544e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000007c4  00000000  00000000  000069b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000e50  00000000  00000000  00007174  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002019  00000000  00000000  00007fc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000278  00000000  00000000  00009fdd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 7d 03 	jmp	0x6fa	; 0x6fa <__vector_1>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 13 05 	jmp	0xa26	; 0xa26 <__vector_6>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 b5 04 	jmp	0x96a	; 0x96a <__vector_9>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 5d 04 	jmp	0x8ba	; 0x8ba <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 54 03 	jmp	0x6a8	; 0x6a8 <__vector_16>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 e0       	ldi	r30, 0x02	; 2
      68:	f5 e1       	ldi	r31, 0x15	; 21
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	aa 37       	cpi	r26, 0x7A	; 122
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	aa e7       	ldi	r26, 0x7A	; 122
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	af 39       	cpi	r26, 0x9F	; 159
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 61 00 	call	0xc2	; 0xc2 <main>
      8a:	0c 94 7f 0a 	jmp	0x14fe	; 0x14fe <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Timer_1_ISR>:

}

void Timer_1_ISR(void)
{
	Timer_1_Cap_calculate(&freq_messure);
      92:	8a e7       	ldi	r24, 0x7A	; 122
      94:	90 e0       	ldi	r25, 0x00	; 0
      96:	0e 94 70 05 	call	0xae0	; 0xae0 <Timer_1_Cap_calculate>
      9a:	08 95       	ret

0000009c <application_init>:
	return 0;
}

void application_init(void)
{
	lcd_initialize(&lcd1);
      9c:	81 e6       	ldi	r24, 0x61	; 97
      9e:	90 e0       	ldi	r25, 0x00	; 0
      a0:	0e 94 c2 02 	call	0x584	; 0x584 <lcd_initialize>
	button_init(&btn1);
      a4:	80 e6       	ldi	r24, 0x60	; 96
      a6:	90 e0       	ldi	r25, 0x00	; 0
      a8:	0e 94 85 00 	call	0x10a	; 0x10a <button_init>
	Timer_1_init();
      ac:	0e 94 a2 04 	call	0x944	; 0x944 <Timer_1_init>
	Timer_1_InputCapture_init();
      b0:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <Timer_1_InputCapture_init>
	Timer_1_InputCapture_Start();
      b4:	0e 94 04 05 	call	0xa08	; 0xa08 <Timer_1_InputCapture_Start>
	Timer_1_set_InputCapture_Callback(Timer_1_ISR);
      b8:	89 e4       	ldi	r24, 0x49	; 73
      ba:	90 e0       	ldi	r25, 0x00	; 0
      bc:	0e 94 0e 05 	call	0xa1c	; 0xa1c <Timer_1_set_InputCapture_Callback>
      c0:	08 95       	ret

000000c2 <main>:
				 .lcd_data_pin7=PIN_7};
				 
button_t btn1={.port_type=PORT_B,.pin_type=PIN_0,.button_stat=BUTTON_NOT_PRESSED};
int main(void)
{
	application_init();
      c2:	0e 94 4e 00 	call	0x9c	; 0x9c <application_init>

	while(1)
	{
		//lcd_send_string_data_pos(&lcd1,0,0,"Freq:");
		int_to_string(freq_messure,freq_measure_str);
      c6:	60 91 9d 00 	lds	r22, 0x009D	; 0x80009d <freq_measure_str>
      ca:	70 91 9e 00 	lds	r23, 0x009E	; 0x80009e <freq_measure_str+0x1>
      ce:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__data_end>
      d2:	90 91 7b 00 	lds	r25, 0x007B	; 0x80007b <__data_end+0x1>
      d6:	0e 94 43 03 	call	0x686	; 0x686 <int_to_string>
		lcd_send_string_data_pos(&lcd1,0,0,freq_measure_str);
      da:	20 91 9d 00 	lds	r18, 0x009D	; 0x80009d <freq_measure_str>
      de:	30 91 9e 00 	lds	r19, 0x009E	; 0x80009e <freq_measure_str+0x1>
      e2:	40 e0       	ldi	r20, 0x00	; 0
      e4:	60 e0       	ldi	r22, 0x00	; 0
      e6:	81 e6       	ldi	r24, 0x61	; 97
      e8:	90 e0       	ldi	r25, 0x00	; 0
      ea:	0e 94 16 03 	call	0x62c	; 0x62c <lcd_send_string_data_pos>
		if(btn1.button_stat==BUTTON_PRESSED)
      ee:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
      f2:	88 23       	and	r24, r24
      f4:	2c f4       	brge	.+10     	; 0x100 <main+0x3e>
		{
			gpio_set_pin(PORT_D,PIN_6);
      f6:	66 e0       	ldi	r22, 0x06	; 6
      f8:	83 e0       	ldi	r24, 0x03	; 3
      fa:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <gpio_set_pin>
      fe:	e3 cf       	rjmp	.-58     	; 0xc6 <main+0x4>
		}
		else
		{
			gpio_clear_pin(PORT_D,PIN_6);
     100:	66 e0       	ldi	r22, 0x06	; 6
     102:	83 e0       	ldi	r24, 0x03	; 3
     104:	0e 94 01 04 	call	0x802	; 0x802 <gpio_clear_pin>
     108:	de cf       	rjmp	.-68     	; 0xc6 <main+0x4>

0000010a <button_init>:
 *  Author: DELL
 */ 
#include "hal_button.h"

ret_status button_init(button_t *btn)
{
     10a:	fc 01       	movw	r30, r24
	ret_status ret=R_NOK;
	if((btn!=NULL_POINTER)&&(btn->port_type<PORT_INVALID)&&(btn->pin_type<PIN_INVALID))
     10c:	89 2b       	or	r24, r25
     10e:	81 f0       	breq	.+32     	; 0x130 <button_init+0x26>
     110:	80 81       	ld	r24, Z
     112:	8f 70       	andi	r24, 0x0F	; 15
     114:	28 2f       	mov	r18, r24
     116:	30 e0       	ldi	r19, 0x00	; 0
     118:	24 30       	cpi	r18, 0x04	; 4
     11a:	31 05       	cpc	r19, r1
     11c:	5c f4       	brge	.+22     	; 0x134 <button_init+0x2a>
     11e:	60 81       	ld	r22, Z
     120:	62 95       	swap	r22
     122:	6f 70       	andi	r22, 0x0F	; 15
     124:	67 70       	andi	r22, 0x07	; 7
	{
		gpio_pin_direction_initialize(btn->port_type,btn->pin_type,DIRECTION_INPUT);
     126:	40 e0       	ldi	r20, 0x00	; 0
     128:	0e 94 a6 03 	call	0x74c	; 0x74c <gpio_pin_direction_initialize>
	}
	else
	{
		return ret;
	}
	return ret;
     12c:	81 e0       	ldi	r24, 0x01	; 1
     12e:	08 95       	ret
		gpio_pin_direction_initialize(btn->port_type,btn->pin_type,DIRECTION_INPUT);
		ret=R_OK;
	}
	else
	{
		return ret;
     130:	80 e0       	ldi	r24, 0x00	; 0
     132:	08 95       	ret
     134:	80 e0       	ldi	r24, 0x00	; 0
	}
	return ret;
}
     136:	08 95       	ret

00000138 <lcd_send_4bits>:
	sprintf(_output, "%i", number);
}

void short_to_string(uint16_type number, uint8_type *_output){
	sprintf(_output, "%i", number);
}
     138:	1f 93       	push	r17
     13a:	cf 93       	push	r28
     13c:	df 93       	push	r29
     13e:	00 97       	sbiw	r24, 0x00	; 0
     140:	a1 f1       	breq	.+104    	; 0x1aa <lcd_send_4bits+0x72>
     142:	16 2f       	mov	r17, r22
     144:	ec 01       	movw	r28, r24
     146:	6a 81       	ldd	r22, Y+2	; 0x02
     148:	67 70       	andi	r22, 0x07	; 7
     14a:	88 81       	ld	r24, Y
     14c:	41 2f       	mov	r20, r17
     14e:	41 70       	andi	r20, 0x01	; 1
     150:	8f 70       	andi	r24, 0x0F	; 15
     152:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     156:	6a 81       	ldd	r22, Y+2	; 0x02
     158:	66 95       	lsr	r22
     15a:	66 95       	lsr	r22
     15c:	66 95       	lsr	r22
     15e:	67 70       	andi	r22, 0x07	; 7
     160:	88 81       	ld	r24, Y
     162:	11 fb       	bst	r17, 1
     164:	44 27       	eor	r20, r20
     166:	40 f9       	bld	r20, 0
     168:	8f 70       	andi	r24, 0x0F	; 15
     16a:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     16e:	6a 81       	ldd	r22, Y+2	; 0x02
     170:	86 2f       	mov	r24, r22
     172:	82 95       	swap	r24
     174:	86 95       	lsr	r24
     176:	86 95       	lsr	r24
     178:	83 70       	andi	r24, 0x03	; 3
     17a:	6b 81       	ldd	r22, Y+3	; 0x03
     17c:	61 70       	andi	r22, 0x01	; 1
     17e:	66 0f       	add	r22, r22
     180:	66 0f       	add	r22, r22
     182:	68 2b       	or	r22, r24
     184:	88 81       	ld	r24, Y
     186:	12 fb       	bst	r17, 2
     188:	44 27       	eor	r20, r20
     18a:	40 f9       	bld	r20, 0
     18c:	8f 70       	andi	r24, 0x0F	; 15
     18e:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     192:	6b 81       	ldd	r22, Y+3	; 0x03
     194:	66 95       	lsr	r22
     196:	67 70       	andi	r22, 0x07	; 7
     198:	88 81       	ld	r24, Y
     19a:	13 fb       	bst	r17, 3
     19c:	44 27       	eor	r20, r20
     19e:	40 f9       	bld	r20, 0
     1a0:	8f 70       	andi	r24, 0x0F	; 15
     1a2:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     1a6:	81 e0       	ldi	r24, 0x01	; 1
     1a8:	01 c0       	rjmp	.+2      	; 0x1ac <lcd_send_4bits+0x74>
     1aa:	80 e0       	ldi	r24, 0x00	; 0
     1ac:	df 91       	pop	r29
     1ae:	cf 91       	pop	r28
     1b0:	1f 91       	pop	r17
     1b2:	08 95       	ret

000001b4 <lcd_send_enable>:
     1b4:	cf 93       	push	r28
     1b6:	df 93       	push	r29
     1b8:	00 97       	sbiw	r24, 0x00	; 0
     1ba:	e9 f0       	breq	.+58     	; 0x1f6 <lcd_send_enable+0x42>
     1bc:	ec 01       	movw	r28, r24
     1be:	6b 81       	ldd	r22, Y+3	; 0x03
     1c0:	62 95       	swap	r22
     1c2:	6f 70       	andi	r22, 0x0F	; 15
     1c4:	67 70       	andi	r22, 0x07	; 7
     1c6:	88 81       	ld	r24, Y
     1c8:	41 e0       	ldi	r20, 0x01	; 1
     1ca:	82 95       	swap	r24
     1cc:	8f 70       	andi	r24, 0x0F	; 15
     1ce:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     1d2:	8f e4       	ldi	r24, 0x4F	; 79
     1d4:	93 ec       	ldi	r25, 0xC3	; 195
     1d6:	01 97       	sbiw	r24, 0x01	; 1
     1d8:	f1 f7       	brne	.-4      	; 0x1d6 <lcd_send_enable+0x22>
     1da:	00 c0       	rjmp	.+0      	; 0x1dc <lcd_send_enable+0x28>
     1dc:	00 00       	nop
     1de:	6b 81       	ldd	r22, Y+3	; 0x03
     1e0:	62 95       	swap	r22
     1e2:	6f 70       	andi	r22, 0x0F	; 15
     1e4:	67 70       	andi	r22, 0x07	; 7
     1e6:	88 81       	ld	r24, Y
     1e8:	40 e0       	ldi	r20, 0x00	; 0
     1ea:	82 95       	swap	r24
     1ec:	8f 70       	andi	r24, 0x0F	; 15
     1ee:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     1f2:	81 e0       	ldi	r24, 0x01	; 1
     1f4:	01 c0       	rjmp	.+2      	; 0x1f8 <lcd_send_enable+0x44>
     1f6:	80 e0       	ldi	r24, 0x00	; 0
     1f8:	df 91       	pop	r29
     1fa:	cf 91       	pop	r28
     1fc:	08 95       	ret

000001fe <lcd_send_command>:
     1fe:	1f 93       	push	r17
     200:	cf 93       	push	r28
     202:	df 93       	push	r29
     204:	00 97       	sbiw	r24, 0x00	; 0
     206:	49 f1       	breq	.+82     	; 0x25a <lcd_send_command+0x5c>
     208:	16 2f       	mov	r17, r22
     20a:	ec 01       	movw	r28, r24
     20c:	6b 81       	ldd	r22, Y+3	; 0x03
     20e:	86 2f       	mov	r24, r22
     210:	88 1f       	adc	r24, r24
     212:	88 27       	eor	r24, r24
     214:	88 1f       	adc	r24, r24
     216:	6c 81       	ldd	r22, Y+4	; 0x04
     218:	63 70       	andi	r22, 0x03	; 3
     21a:	66 0f       	add	r22, r22
     21c:	68 2b       	or	r22, r24
     21e:	89 81       	ldd	r24, Y+1	; 0x01
     220:	40 e0       	ldi	r20, 0x00	; 0
     222:	8f 70       	andi	r24, 0x0F	; 15
     224:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     228:	61 2f       	mov	r22, r17
     22a:	62 95       	swap	r22
     22c:	6f 70       	andi	r22, 0x0F	; 15
     22e:	ce 01       	movw	r24, r28
     230:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_send_4bits>
     234:	ce 01       	movw	r24, r28
     236:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_send_enable>
     23a:	61 2f       	mov	r22, r17
     23c:	6f 70       	andi	r22, 0x0F	; 15
     23e:	ce 01       	movw	r24, r28
     240:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_send_4bits>
     244:	ce 01       	movw	r24, r28
     246:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_send_enable>
     24a:	83 ef       	ldi	r24, 0xF3	; 243
     24c:	91 e0       	ldi	r25, 0x01	; 1
     24e:	01 97       	sbiw	r24, 0x01	; 1
     250:	f1 f7       	brne	.-4      	; 0x24e <lcd_send_command+0x50>
     252:	00 c0       	rjmp	.+0      	; 0x254 <lcd_send_command+0x56>
     254:	00 00       	nop
     256:	81 e0       	ldi	r24, 0x01	; 1
     258:	01 c0       	rjmp	.+2      	; 0x25c <lcd_send_command+0x5e>
     25a:	80 e0       	ldi	r24, 0x00	; 0
     25c:	df 91       	pop	r29
     25e:	cf 91       	pop	r28
     260:	1f 91       	pop	r17
     262:	08 95       	ret

00000264 <lcd_4bit_lcd_initialize>:
     264:	cf 93       	push	r28
     266:	df 93       	push	r29
     268:	ec 01       	movw	r28, r24
     26a:	6b 81       	ldd	r22, Y+3	; 0x03
     26c:	62 95       	swap	r22
     26e:	6f 70       	andi	r22, 0x0F	; 15
     270:	67 70       	andi	r22, 0x07	; 7
     272:	88 81       	ld	r24, Y
     274:	41 e0       	ldi	r20, 0x01	; 1
     276:	82 95       	swap	r24
     278:	8f 70       	andi	r24, 0x0F	; 15
     27a:	0e 94 a6 03 	call	0x74c	; 0x74c <gpio_pin_direction_initialize>
     27e:	6b 81       	ldd	r22, Y+3	; 0x03
     280:	86 2f       	mov	r24, r22
     282:	88 1f       	adc	r24, r24
     284:	88 27       	eor	r24, r24
     286:	88 1f       	adc	r24, r24
     288:	6c 81       	ldd	r22, Y+4	; 0x04
     28a:	63 70       	andi	r22, 0x03	; 3
     28c:	66 0f       	add	r22, r22
     28e:	68 2b       	or	r22, r24
     290:	89 81       	ldd	r24, Y+1	; 0x01
     292:	41 e0       	ldi	r20, 0x01	; 1
     294:	8f 70       	andi	r24, 0x0F	; 15
     296:	0e 94 a6 03 	call	0x74c	; 0x74c <gpio_pin_direction_initialize>
     29a:	6c 81       	ldd	r22, Y+4	; 0x04
     29c:	66 95       	lsr	r22
     29e:	66 95       	lsr	r22
     2a0:	67 70       	andi	r22, 0x07	; 7
     2a2:	89 81       	ldd	r24, Y+1	; 0x01
     2a4:	41 e0       	ldi	r20, 0x01	; 1
     2a6:	82 95       	swap	r24
     2a8:	8f 70       	andi	r24, 0x0F	; 15
     2aa:	0e 94 a6 03 	call	0x74c	; 0x74c <gpio_pin_direction_initialize>
     2ae:	6a 81       	ldd	r22, Y+2	; 0x02
     2b0:	67 70       	andi	r22, 0x07	; 7
     2b2:	88 81       	ld	r24, Y
     2b4:	41 e0       	ldi	r20, 0x01	; 1
     2b6:	8f 70       	andi	r24, 0x0F	; 15
     2b8:	0e 94 a6 03 	call	0x74c	; 0x74c <gpio_pin_direction_initialize>
     2bc:	6a 81       	ldd	r22, Y+2	; 0x02
     2be:	66 95       	lsr	r22
     2c0:	66 95       	lsr	r22
     2c2:	66 95       	lsr	r22
     2c4:	67 70       	andi	r22, 0x07	; 7
     2c6:	88 81       	ld	r24, Y
     2c8:	41 e0       	ldi	r20, 0x01	; 1
     2ca:	8f 70       	andi	r24, 0x0F	; 15
     2cc:	0e 94 a6 03 	call	0x74c	; 0x74c <gpio_pin_direction_initialize>
     2d0:	6a 81       	ldd	r22, Y+2	; 0x02
     2d2:	86 2f       	mov	r24, r22
     2d4:	82 95       	swap	r24
     2d6:	86 95       	lsr	r24
     2d8:	86 95       	lsr	r24
     2da:	83 70       	andi	r24, 0x03	; 3
     2dc:	6b 81       	ldd	r22, Y+3	; 0x03
     2de:	61 70       	andi	r22, 0x01	; 1
     2e0:	66 0f       	add	r22, r22
     2e2:	66 0f       	add	r22, r22
     2e4:	68 2b       	or	r22, r24
     2e6:	88 81       	ld	r24, Y
     2e8:	41 e0       	ldi	r20, 0x01	; 1
     2ea:	8f 70       	andi	r24, 0x0F	; 15
     2ec:	0e 94 a6 03 	call	0x74c	; 0x74c <gpio_pin_direction_initialize>
     2f0:	6b 81       	ldd	r22, Y+3	; 0x03
     2f2:	66 95       	lsr	r22
     2f4:	67 70       	andi	r22, 0x07	; 7
     2f6:	88 81       	ld	r24, Y
     2f8:	41 e0       	ldi	r20, 0x01	; 1
     2fa:	8f 70       	andi	r24, 0x0F	; 15
     2fc:	0e 94 a6 03 	call	0x74c	; 0x74c <gpio_pin_direction_initialize>
     300:	8f e0       	ldi	r24, 0x0F	; 15
     302:	97 e2       	ldi	r25, 0x27	; 39
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	f1 f7       	brne	.-4      	; 0x304 <lcd_4bit_lcd_initialize+0xa0>
     308:	00 c0       	rjmp	.+0      	; 0x30a <lcd_4bit_lcd_initialize+0xa6>
     30a:	00 00       	nop
     30c:	6b 81       	ldd	r22, Y+3	; 0x03
     30e:	62 95       	swap	r22
     310:	6f 70       	andi	r22, 0x0F	; 15
     312:	67 70       	andi	r22, 0x07	; 7
     314:	88 81       	ld	r24, Y
     316:	40 e0       	ldi	r20, 0x00	; 0
     318:	82 95       	swap	r24
     31a:	8f 70       	andi	r24, 0x0F	; 15
     31c:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     320:	6b 81       	ldd	r22, Y+3	; 0x03
     322:	86 2f       	mov	r24, r22
     324:	88 1f       	adc	r24, r24
     326:	88 27       	eor	r24, r24
     328:	88 1f       	adc	r24, r24
     32a:	6c 81       	ldd	r22, Y+4	; 0x04
     32c:	63 70       	andi	r22, 0x03	; 3
     32e:	66 0f       	add	r22, r22
     330:	68 2b       	or	r22, r24
     332:	89 81       	ldd	r24, Y+1	; 0x01
     334:	40 e0       	ldi	r20, 0x00	; 0
     336:	8f 70       	andi	r24, 0x0F	; 15
     338:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     33c:	6c 81       	ldd	r22, Y+4	; 0x04
     33e:	66 95       	lsr	r22
     340:	66 95       	lsr	r22
     342:	67 70       	andi	r22, 0x07	; 7
     344:	89 81       	ldd	r24, Y+1	; 0x01
     346:	40 e0       	ldi	r20, 0x00	; 0
     348:	82 95       	swap	r24
     34a:	8f 70       	andi	r24, 0x0F	; 15
     34c:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     350:	6a 81       	ldd	r22, Y+2	; 0x02
     352:	67 70       	andi	r22, 0x07	; 7
     354:	88 81       	ld	r24, Y
     356:	41 e0       	ldi	r20, 0x01	; 1
     358:	8f 70       	andi	r24, 0x0F	; 15
     35a:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     35e:	6a 81       	ldd	r22, Y+2	; 0x02
     360:	66 95       	lsr	r22
     362:	66 95       	lsr	r22
     364:	66 95       	lsr	r22
     366:	67 70       	andi	r22, 0x07	; 7
     368:	88 81       	ld	r24, Y
     36a:	41 e0       	ldi	r20, 0x01	; 1
     36c:	8f 70       	andi	r24, 0x0F	; 15
     36e:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     372:	6a 81       	ldd	r22, Y+2	; 0x02
     374:	86 2f       	mov	r24, r22
     376:	82 95       	swap	r24
     378:	86 95       	lsr	r24
     37a:	86 95       	lsr	r24
     37c:	83 70       	andi	r24, 0x03	; 3
     37e:	6b 81       	ldd	r22, Y+3	; 0x03
     380:	61 70       	andi	r22, 0x01	; 1
     382:	66 0f       	add	r22, r22
     384:	66 0f       	add	r22, r22
     386:	68 2b       	or	r22, r24
     388:	88 81       	ld	r24, Y
     38a:	40 e0       	ldi	r20, 0x00	; 0
     38c:	8f 70       	andi	r24, 0x0F	; 15
     38e:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     392:	6b 81       	ldd	r22, Y+3	; 0x03
     394:	66 95       	lsr	r22
     396:	67 70       	andi	r22, 0x07	; 7
     398:	88 81       	ld	r24, Y
     39a:	40 e0       	ldi	r20, 0x00	; 0
     39c:	8f 70       	andi	r24, 0x0F	; 15
     39e:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     3a2:	ce 01       	movw	r24, r28
     3a4:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_send_enable>
     3a8:	81 ee       	ldi	r24, 0xE1	; 225
     3aa:	94 e0       	ldi	r25, 0x04	; 4
     3ac:	01 97       	sbiw	r24, 0x01	; 1
     3ae:	f1 f7       	brne	.-4      	; 0x3ac <lcd_4bit_lcd_initialize+0x148>
     3b0:	00 c0       	rjmp	.+0      	; 0x3b2 <lcd_4bit_lcd_initialize+0x14e>
     3b2:	00 00       	nop
     3b4:	6b 81       	ldd	r22, Y+3	; 0x03
     3b6:	62 95       	swap	r22
     3b8:	6f 70       	andi	r22, 0x0F	; 15
     3ba:	67 70       	andi	r22, 0x07	; 7
     3bc:	88 81       	ld	r24, Y
     3be:	40 e0       	ldi	r20, 0x00	; 0
     3c0:	82 95       	swap	r24
     3c2:	8f 70       	andi	r24, 0x0F	; 15
     3c4:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     3c8:	6b 81       	ldd	r22, Y+3	; 0x03
     3ca:	86 2f       	mov	r24, r22
     3cc:	88 1f       	adc	r24, r24
     3ce:	88 27       	eor	r24, r24
     3d0:	88 1f       	adc	r24, r24
     3d2:	6c 81       	ldd	r22, Y+4	; 0x04
     3d4:	63 70       	andi	r22, 0x03	; 3
     3d6:	66 0f       	add	r22, r22
     3d8:	68 2b       	or	r22, r24
     3da:	89 81       	ldd	r24, Y+1	; 0x01
     3dc:	40 e0       	ldi	r20, 0x00	; 0
     3de:	8f 70       	andi	r24, 0x0F	; 15
     3e0:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     3e4:	6c 81       	ldd	r22, Y+4	; 0x04
     3e6:	66 95       	lsr	r22
     3e8:	66 95       	lsr	r22
     3ea:	67 70       	andi	r22, 0x07	; 7
     3ec:	89 81       	ldd	r24, Y+1	; 0x01
     3ee:	40 e0       	ldi	r20, 0x00	; 0
     3f0:	82 95       	swap	r24
     3f2:	8f 70       	andi	r24, 0x0F	; 15
     3f4:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     3f8:	6a 81       	ldd	r22, Y+2	; 0x02
     3fa:	67 70       	andi	r22, 0x07	; 7
     3fc:	88 81       	ld	r24, Y
     3fe:	41 e0       	ldi	r20, 0x01	; 1
     400:	8f 70       	andi	r24, 0x0F	; 15
     402:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     406:	6a 81       	ldd	r22, Y+2	; 0x02
     408:	66 95       	lsr	r22
     40a:	66 95       	lsr	r22
     40c:	66 95       	lsr	r22
     40e:	67 70       	andi	r22, 0x07	; 7
     410:	88 81       	ld	r24, Y
     412:	41 e0       	ldi	r20, 0x01	; 1
     414:	8f 70       	andi	r24, 0x0F	; 15
     416:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     41a:	6a 81       	ldd	r22, Y+2	; 0x02
     41c:	86 2f       	mov	r24, r22
     41e:	82 95       	swap	r24
     420:	86 95       	lsr	r24
     422:	86 95       	lsr	r24
     424:	83 70       	andi	r24, 0x03	; 3
     426:	6b 81       	ldd	r22, Y+3	; 0x03
     428:	61 70       	andi	r22, 0x01	; 1
     42a:	66 0f       	add	r22, r22
     42c:	66 0f       	add	r22, r22
     42e:	68 2b       	or	r22, r24
     430:	88 81       	ld	r24, Y
     432:	40 e0       	ldi	r20, 0x00	; 0
     434:	8f 70       	andi	r24, 0x0F	; 15
     436:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     43a:	6b 81       	ldd	r22, Y+3	; 0x03
     43c:	66 95       	lsr	r22
     43e:	67 70       	andi	r22, 0x07	; 7
     440:	88 81       	ld	r24, Y
     442:	40 e0       	ldi	r20, 0x00	; 0
     444:	8f 70       	andi	r24, 0x0F	; 15
     446:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     44a:	ce 01       	movw	r24, r28
     44c:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_send_enable>
     450:	92 e3       	ldi	r25, 0x32	; 50
     452:	9a 95       	dec	r25
     454:	f1 f7       	brne	.-4      	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
     456:	6b 81       	ldd	r22, Y+3	; 0x03
     458:	62 95       	swap	r22
     45a:	6f 70       	andi	r22, 0x0F	; 15
     45c:	67 70       	andi	r22, 0x07	; 7
     45e:	88 81       	ld	r24, Y
     460:	40 e0       	ldi	r20, 0x00	; 0
     462:	82 95       	swap	r24
     464:	8f 70       	andi	r24, 0x0F	; 15
     466:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     46a:	6b 81       	ldd	r22, Y+3	; 0x03
     46c:	86 2f       	mov	r24, r22
     46e:	88 1f       	adc	r24, r24
     470:	88 27       	eor	r24, r24
     472:	88 1f       	adc	r24, r24
     474:	6c 81       	ldd	r22, Y+4	; 0x04
     476:	63 70       	andi	r22, 0x03	; 3
     478:	66 0f       	add	r22, r22
     47a:	68 2b       	or	r22, r24
     47c:	89 81       	ldd	r24, Y+1	; 0x01
     47e:	40 e0       	ldi	r20, 0x00	; 0
     480:	8f 70       	andi	r24, 0x0F	; 15
     482:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     486:	6c 81       	ldd	r22, Y+4	; 0x04
     488:	66 95       	lsr	r22
     48a:	66 95       	lsr	r22
     48c:	67 70       	andi	r22, 0x07	; 7
     48e:	89 81       	ldd	r24, Y+1	; 0x01
     490:	40 e0       	ldi	r20, 0x00	; 0
     492:	82 95       	swap	r24
     494:	8f 70       	andi	r24, 0x0F	; 15
     496:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     49a:	6a 81       	ldd	r22, Y+2	; 0x02
     49c:	67 70       	andi	r22, 0x07	; 7
     49e:	88 81       	ld	r24, Y
     4a0:	41 e0       	ldi	r20, 0x01	; 1
     4a2:	8f 70       	andi	r24, 0x0F	; 15
     4a4:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     4a8:	6a 81       	ldd	r22, Y+2	; 0x02
     4aa:	66 95       	lsr	r22
     4ac:	66 95       	lsr	r22
     4ae:	66 95       	lsr	r22
     4b0:	67 70       	andi	r22, 0x07	; 7
     4b2:	88 81       	ld	r24, Y
     4b4:	41 e0       	ldi	r20, 0x01	; 1
     4b6:	8f 70       	andi	r24, 0x0F	; 15
     4b8:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     4bc:	6a 81       	ldd	r22, Y+2	; 0x02
     4be:	86 2f       	mov	r24, r22
     4c0:	82 95       	swap	r24
     4c2:	86 95       	lsr	r24
     4c4:	86 95       	lsr	r24
     4c6:	83 70       	andi	r24, 0x03	; 3
     4c8:	6b 81       	ldd	r22, Y+3	; 0x03
     4ca:	61 70       	andi	r22, 0x01	; 1
     4cc:	66 0f       	add	r22, r22
     4ce:	66 0f       	add	r22, r22
     4d0:	68 2b       	or	r22, r24
     4d2:	88 81       	ld	r24, Y
     4d4:	40 e0       	ldi	r20, 0x00	; 0
     4d6:	8f 70       	andi	r24, 0x0F	; 15
     4d8:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     4dc:	6b 81       	ldd	r22, Y+3	; 0x03
     4de:	66 95       	lsr	r22
     4e0:	67 70       	andi	r22, 0x07	; 7
     4e2:	88 81       	ld	r24, Y
     4e4:	40 e0       	ldi	r20, 0x00	; 0
     4e6:	8f 70       	andi	r24, 0x0F	; 15
     4e8:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     4ec:	ce 01       	movw	r24, r28
     4ee:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_send_enable>
     4f2:	61 e0       	ldi	r22, 0x01	; 1
     4f4:	ce 01       	movw	r24, r28
     4f6:	0e 94 ff 00 	call	0x1fe	; 0x1fe <lcd_send_command>
     4fa:	89 ef       	ldi	r24, 0xF9	; 249
     4fc:	90 e0       	ldi	r25, 0x00	; 0
     4fe:	01 97       	sbiw	r24, 0x01	; 1
     500:	f1 f7       	brne	.-4      	; 0x4fe <__EEPROM_REGION_LENGTH__+0xfe>
     502:	00 c0       	rjmp	.+0      	; 0x504 <__EEPROM_REGION_LENGTH__+0x104>
     504:	00 00       	nop
     506:	62 e0       	ldi	r22, 0x02	; 2
     508:	ce 01       	movw	r24, r28
     50a:	0e 94 ff 00 	call	0x1fe	; 0x1fe <lcd_send_command>
     50e:	89 ef       	ldi	r24, 0xF9	; 249
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	01 97       	sbiw	r24, 0x01	; 1
     514:	f1 f7       	brne	.-4      	; 0x512 <__EEPROM_REGION_LENGTH__+0x112>
     516:	00 c0       	rjmp	.+0      	; 0x518 <__EEPROM_REGION_LENGTH__+0x118>
     518:	00 00       	nop
     51a:	66 e0       	ldi	r22, 0x06	; 6
     51c:	ce 01       	movw	r24, r28
     51e:	0e 94 ff 00 	call	0x1fe	; 0x1fe <lcd_send_command>
     522:	89 ef       	ldi	r24, 0xF9	; 249
     524:	90 e0       	ldi	r25, 0x00	; 0
     526:	01 97       	sbiw	r24, 0x01	; 1
     528:	f1 f7       	brne	.-4      	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
     52a:	00 c0       	rjmp	.+0      	; 0x52c <__EEPROM_REGION_LENGTH__+0x12c>
     52c:	00 00       	nop
     52e:	6c e0       	ldi	r22, 0x0C	; 12
     530:	ce 01       	movw	r24, r28
     532:	0e 94 ff 00 	call	0x1fe	; 0x1fe <lcd_send_command>
     536:	89 ef       	ldi	r24, 0xF9	; 249
     538:	90 e0       	ldi	r25, 0x00	; 0
     53a:	01 97       	sbiw	r24, 0x01	; 1
     53c:	f1 f7       	brne	.-4      	; 0x53a <__EEPROM_REGION_LENGTH__+0x13a>
     53e:	00 c0       	rjmp	.+0      	; 0x540 <__EEPROM_REGION_LENGTH__+0x140>
     540:	00 00       	nop
     542:	6c e1       	ldi	r22, 0x1C	; 28
     544:	ce 01       	movw	r24, r28
     546:	0e 94 ff 00 	call	0x1fe	; 0x1fe <lcd_send_command>
     54a:	89 ef       	ldi	r24, 0xF9	; 249
     54c:	90 e0       	ldi	r25, 0x00	; 0
     54e:	01 97       	sbiw	r24, 0x01	; 1
     550:	f1 f7       	brne	.-4      	; 0x54e <__EEPROM_REGION_LENGTH__+0x14e>
     552:	00 c0       	rjmp	.+0      	; 0x554 <__EEPROM_REGION_LENGTH__+0x154>
     554:	00 00       	nop
     556:	68 e2       	ldi	r22, 0x28	; 40
     558:	ce 01       	movw	r24, r28
     55a:	0e 94 ff 00 	call	0x1fe	; 0x1fe <lcd_send_command>
     55e:	89 ef       	ldi	r24, 0xF9	; 249
     560:	90 e0       	ldi	r25, 0x00	; 0
     562:	01 97       	sbiw	r24, 0x01	; 1
     564:	f1 f7       	brne	.-4      	; 0x562 <__EEPROM_REGION_LENGTH__+0x162>
     566:	00 c0       	rjmp	.+0      	; 0x568 <__EEPROM_REGION_LENGTH__+0x168>
     568:	00 00       	nop
     56a:	60 e8       	ldi	r22, 0x80	; 128
     56c:	ce 01       	movw	r24, r28
     56e:	0e 94 ff 00 	call	0x1fe	; 0x1fe <lcd_send_command>
     572:	89 ef       	ldi	r24, 0xF9	; 249
     574:	90 e0       	ldi	r25, 0x00	; 0
     576:	01 97       	sbiw	r24, 0x01	; 1
     578:	f1 f7       	brne	.-4      	; 0x576 <__EEPROM_REGION_LENGTH__+0x176>
     57a:	00 c0       	rjmp	.+0      	; 0x57c <__EEPROM_REGION_LENGTH__+0x17c>
     57c:	00 00       	nop
     57e:	df 91       	pop	r29
     580:	cf 91       	pop	r28
     582:	08 95       	ret

00000584 <lcd_initialize>:
     584:	00 97       	sbiw	r24, 0x00	; 0
     586:	21 f0       	breq	.+8      	; 0x590 <lcd_initialize+0xc>
     588:	0e 94 32 01 	call	0x264	; 0x264 <lcd_4bit_lcd_initialize>
     58c:	81 e0       	ldi	r24, 0x01	; 1
     58e:	08 95       	ret
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	08 95       	ret

00000594 <lcd_set_cursor>:
     594:	62 30       	cpi	r22, 0x02	; 2
     596:	71 f0       	breq	.+28     	; 0x5b4 <lcd_set_cursor+0x20>
     598:	18 f4       	brcc	.+6      	; 0x5a0 <lcd_set_cursor+0xc>
     59a:	61 30       	cpi	r22, 0x01	; 1
     59c:	31 f0       	breq	.+12     	; 0x5aa <lcd_set_cursor+0x16>
     59e:	08 95       	ret
     5a0:	63 30       	cpi	r22, 0x03	; 3
     5a2:	69 f0       	breq	.+26     	; 0x5be <lcd_set_cursor+0x2a>
     5a4:	64 30       	cpi	r22, 0x04	; 4
     5a6:	81 f0       	breq	.+32     	; 0x5c8 <lcd_set_cursor+0x34>
     5a8:	08 95       	ret
     5aa:	6f e7       	ldi	r22, 0x7F	; 127
     5ac:	64 0f       	add	r22, r20
     5ae:	0e 94 ff 00 	call	0x1fe	; 0x1fe <lcd_send_command>
     5b2:	08 95       	ret
     5b4:	6f eb       	ldi	r22, 0xBF	; 191
     5b6:	64 0f       	add	r22, r20
     5b8:	0e 94 ff 00 	call	0x1fe	; 0x1fe <lcd_send_command>
     5bc:	08 95       	ret
     5be:	63 e9       	ldi	r22, 0x93	; 147
     5c0:	64 0f       	add	r22, r20
     5c2:	0e 94 ff 00 	call	0x1fe	; 0x1fe <lcd_send_command>
     5c6:	08 95       	ret
     5c8:	63 ed       	ldi	r22, 0xD3	; 211
     5ca:	64 0f       	add	r22, r20
     5cc:	0e 94 ff 00 	call	0x1fe	; 0x1fe <lcd_send_command>
     5d0:	08 95       	ret

000005d2 <lcd_send_char_data>:
     5d2:	1f 93       	push	r17
     5d4:	cf 93       	push	r28
     5d6:	df 93       	push	r29
     5d8:	00 97       	sbiw	r24, 0x00	; 0
     5da:	19 f1       	breq	.+70     	; 0x622 <lcd_send_char_data+0x50>
     5dc:	16 2f       	mov	r17, r22
     5de:	ec 01       	movw	r28, r24
     5e0:	6b 81       	ldd	r22, Y+3	; 0x03
     5e2:	86 2f       	mov	r24, r22
     5e4:	88 1f       	adc	r24, r24
     5e6:	88 27       	eor	r24, r24
     5e8:	88 1f       	adc	r24, r24
     5ea:	6c 81       	ldd	r22, Y+4	; 0x04
     5ec:	63 70       	andi	r22, 0x03	; 3
     5ee:	66 0f       	add	r22, r22
     5f0:	68 2b       	or	r22, r24
     5f2:	89 81       	ldd	r24, Y+1	; 0x01
     5f4:	41 e0       	ldi	r20, 0x01	; 1
     5f6:	8f 70       	andi	r24, 0x0F	; 15
     5f8:	0e 94 1f 04 	call	0x83e	; 0x83e <gpio_write_pin>
     5fc:	61 2f       	mov	r22, r17
     5fe:	62 95       	swap	r22
     600:	6f 70       	andi	r22, 0x0F	; 15
     602:	ce 01       	movw	r24, r28
     604:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_send_4bits>
     608:	ce 01       	movw	r24, r28
     60a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_send_enable>
     60e:	61 2f       	mov	r22, r17
     610:	6f 70       	andi	r22, 0x0F	; 15
     612:	ce 01       	movw	r24, r28
     614:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_send_4bits>
     618:	ce 01       	movw	r24, r28
     61a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_send_enable>
     61e:	81 e0       	ldi	r24, 0x01	; 1
     620:	01 c0       	rjmp	.+2      	; 0x624 <lcd_send_char_data+0x52>
     622:	80 e0       	ldi	r24, 0x00	; 0
     624:	df 91       	pop	r29
     626:	cf 91       	pop	r28
     628:	1f 91       	pop	r17
     62a:	08 95       	ret

0000062c <lcd_send_string_data_pos>:
     62c:	ef 92       	push	r14
     62e:	ff 92       	push	r15
     630:	0f 93       	push	r16
     632:	1f 93       	push	r17
     634:	cf 93       	push	r28
     636:	df 93       	push	r29
     638:	8c 01       	movw	r16, r24
     63a:	f6 2e       	mov	r15, r22
     63c:	e4 2e       	mov	r14, r20
     63e:	e9 01       	movw	r28, r18
     640:	00 97       	sbiw	r24, 0x00	; 0
     642:	c9 f0       	breq	.+50     	; 0x676 <lcd_send_string_data_pos+0x4a>
     644:	62 e0       	ldi	r22, 0x02	; 2
     646:	0e 94 ff 00 	call	0x1fe	; 0x1fe <lcd_send_command>
     64a:	4e 2d       	mov	r20, r14
     64c:	6f 2d       	mov	r22, r15
     64e:	c8 01       	movw	r24, r16
     650:	0e 94 ca 02 	call	0x594	; 0x594 <lcd_set_cursor>
     654:	80 e0       	ldi	r24, 0x00	; 0
     656:	0b c0       	rjmp	.+22     	; 0x66e <lcd_send_string_data_pos+0x42>
     658:	21 96       	adiw	r28, 0x01	; 1
     65a:	c8 01       	movw	r24, r16
     65c:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <lcd_send_char_data>
     660:	89 ef       	ldi	r24, 0xF9	; 249
     662:	90 e0       	ldi	r25, 0x00	; 0
     664:	01 97       	sbiw	r24, 0x01	; 1
     666:	f1 f7       	brne	.-4      	; 0x664 <lcd_send_string_data_pos+0x38>
     668:	00 c0       	rjmp	.+0      	; 0x66a <lcd_send_string_data_pos+0x3e>
     66a:	00 00       	nop
     66c:	81 e0       	ldi	r24, 0x01	; 1
     66e:	68 81       	ld	r22, Y
     670:	61 11       	cpse	r22, r1
     672:	f2 cf       	rjmp	.-28     	; 0x658 <lcd_send_string_data_pos+0x2c>
     674:	01 c0       	rjmp	.+2      	; 0x678 <lcd_send_string_data_pos+0x4c>
     676:	80 e0       	ldi	r24, 0x00	; 0
     678:	df 91       	pop	r29
     67a:	cf 91       	pop	r28
     67c:	1f 91       	pop	r17
     67e:	0f 91       	pop	r16
     680:	ff 90       	pop	r15
     682:	ef 90       	pop	r14
     684:	08 95       	ret

00000686 <int_to_string>:

void int_to_string(uint32_type number, uint8_type *_output){
	sprintf(_output, "%i", number);
     686:	9f 93       	push	r25
     688:	8f 93       	push	r24
     68a:	86 e6       	ldi	r24, 0x66	; 102
     68c:	90 e0       	ldi	r25, 0x00	; 0
     68e:	9f 93       	push	r25
     690:	8f 93       	push	r24
     692:	7f 93       	push	r23
     694:	6f 93       	push	r22
     696:	0e 94 95 07 	call	0xf2a	; 0xf2a <sprintf>
     69a:	0f 90       	pop	r0
     69c:	0f 90       	pop	r0
     69e:	0f 90       	pop	r0
     6a0:	0f 90       	pop	r0
     6a2:	0f 90       	pop	r0
     6a4:	0f 90       	pop	r0
     6a6:	08 95       	ret

000006a8 <__vector_16>:
void ADC_setCallBack(void(*CopyFunctionPtr)(void))
{
	adc_call_Back=CopyFunctionPtr;
}
void __vector_16(void)
{
     6a8:	1f 92       	push	r1
     6aa:	0f 92       	push	r0
     6ac:	0f b6       	in	r0, 0x3f	; 63
     6ae:	0f 92       	push	r0
     6b0:	11 24       	eor	r1, r1
     6b2:	2f 93       	push	r18
     6b4:	3f 93       	push	r19
     6b6:	4f 93       	push	r20
     6b8:	5f 93       	push	r21
     6ba:	6f 93       	push	r22
     6bc:	7f 93       	push	r23
     6be:	8f 93       	push	r24
     6c0:	9f 93       	push	r25
     6c2:	af 93       	push	r26
     6c4:	bf 93       	push	r27
     6c6:	ef 93       	push	r30
     6c8:	ff 93       	push	r31
	if(adc_call_Back!=NULL_POINTER)
     6ca:	e0 91 7c 00 	lds	r30, 0x007C	; 0x80007c <adc_call_Back>
     6ce:	f0 91 7d 00 	lds	r31, 0x007D	; 0x80007d <adc_call_Back+0x1>
     6d2:	30 97       	sbiw	r30, 0x00	; 0
     6d4:	09 f0       	breq	.+2      	; 0x6d8 <__vector_16+0x30>
	{
		adc_call_Back();
     6d6:	09 95       	icall
	}
	
}	
     6d8:	ff 91       	pop	r31
     6da:	ef 91       	pop	r30
     6dc:	bf 91       	pop	r27
     6de:	af 91       	pop	r26
     6e0:	9f 91       	pop	r25
     6e2:	8f 91       	pop	r24
     6e4:	7f 91       	pop	r23
     6e6:	6f 91       	pop	r22
     6e8:	5f 91       	pop	r21
     6ea:	4f 91       	pop	r20
     6ec:	3f 91       	pop	r19
     6ee:	2f 91       	pop	r18
     6f0:	0f 90       	pop	r0
     6f2:	0f be       	out	0x3f, r0	; 63
     6f4:	0f 90       	pop	r0
     6f6:	1f 90       	pop	r1
     6f8:	18 95       	reti

000006fa <__vector_1>:
{
	CallBackFunc=CopyFunctionPtr;
}

void __vector_1(void)
{
     6fa:	1f 92       	push	r1
     6fc:	0f 92       	push	r0
     6fe:	0f b6       	in	r0, 0x3f	; 63
     700:	0f 92       	push	r0
     702:	11 24       	eor	r1, r1
     704:	2f 93       	push	r18
     706:	3f 93       	push	r19
     708:	4f 93       	push	r20
     70a:	5f 93       	push	r21
     70c:	6f 93       	push	r22
     70e:	7f 93       	push	r23
     710:	8f 93       	push	r24
     712:	9f 93       	push	r25
     714:	af 93       	push	r26
     716:	bf 93       	push	r27
     718:	ef 93       	push	r30
     71a:	ff 93       	push	r31
	if(CallBackFunc !=NULL_POINTER)
     71c:	e0 91 7e 00 	lds	r30, 0x007E	; 0x80007e <CallBackFunc>
     720:	f0 91 7f 00 	lds	r31, 0x007F	; 0x80007f <CallBackFunc+0x1>
     724:	30 97       	sbiw	r30, 0x00	; 0
     726:	09 f0       	breq	.+2      	; 0x72a <__vector_1+0x30>
	{
		CallBackFunc();
     728:	09 95       	icall
	}
	
}
     72a:	ff 91       	pop	r31
     72c:	ef 91       	pop	r30
     72e:	bf 91       	pop	r27
     730:	af 91       	pop	r26
     732:	9f 91       	pop	r25
     734:	8f 91       	pop	r24
     736:	7f 91       	pop	r23
     738:	6f 91       	pop	r22
     73a:	5f 91       	pop	r21
     73c:	4f 91       	pop	r20
     73e:	3f 91       	pop	r19
     740:	2f 91       	pop	r18
     742:	0f 90       	pop	r0
     744:	0f be       	out	0x3f, r0	; 63
     746:	0f 90       	pop	r0
     748:	1f 90       	pop	r1
     74a:	18 95       	reti

0000074c <gpio_pin_direction_initialize>:
	else
	{
		return ret;
	}
	return ret;
}
     74c:	84 30       	cpi	r24, 0x04	; 4
     74e:	a0 f5       	brcc	.+104    	; 0x7b8 <gpio_pin_direction_initialize+0x6c>
     750:	68 30       	cpi	r22, 0x08	; 8
     752:	a0 f5       	brcc	.+104    	; 0x7bc <gpio_pin_direction_initialize+0x70>
     754:	42 30       	cpi	r20, 0x02	; 2
     756:	a0 f5       	brcc	.+104    	; 0x7c0 <gpio_pin_direction_initialize+0x74>
     758:	44 23       	and	r20, r20
     75a:	19 f0       	breq	.+6      	; 0x762 <gpio_pin_direction_initialize+0x16>
     75c:	41 30       	cpi	r20, 0x01	; 1
     75e:	b9 f0       	breq	.+46     	; 0x78e <gpio_pin_direction_initialize+0x42>
     760:	31 c0       	rjmp	.+98     	; 0x7c4 <gpio_pin_direction_initialize+0x78>
     762:	e8 2f       	mov	r30, r24
     764:	f0 e0       	ldi	r31, 0x00	; 0
     766:	ee 0f       	add	r30, r30
     768:	ff 1f       	adc	r31, r31
     76a:	ef 58       	subi	r30, 0x8F	; 143
     76c:	ff 4f       	sbci	r31, 0xFF	; 255
     76e:	01 90       	ld	r0, Z+
     770:	f0 81       	ld	r31, Z
     772:	e0 2d       	mov	r30, r0
     774:	20 81       	ld	r18, Z
     776:	81 e0       	ldi	r24, 0x01	; 1
     778:	90 e0       	ldi	r25, 0x00	; 0
     77a:	02 c0       	rjmp	.+4      	; 0x780 <gpio_pin_direction_initialize+0x34>
     77c:	88 0f       	add	r24, r24
     77e:	99 1f       	adc	r25, r25
     780:	6a 95       	dec	r22
     782:	e2 f7       	brpl	.-8      	; 0x77c <gpio_pin_direction_initialize+0x30>
     784:	80 95       	com	r24
     786:	82 23       	and	r24, r18
     788:	80 83       	st	Z, r24
     78a:	81 e0       	ldi	r24, 0x01	; 1
     78c:	08 95       	ret
     78e:	e8 2f       	mov	r30, r24
     790:	f0 e0       	ldi	r31, 0x00	; 0
     792:	ee 0f       	add	r30, r30
     794:	ff 1f       	adc	r31, r31
     796:	ef 58       	subi	r30, 0x8F	; 143
     798:	ff 4f       	sbci	r31, 0xFF	; 255
     79a:	01 90       	ld	r0, Z+
     79c:	f0 81       	ld	r31, Z
     79e:	e0 2d       	mov	r30, r0
     7a0:	20 81       	ld	r18, Z
     7a2:	81 e0       	ldi	r24, 0x01	; 1
     7a4:	90 e0       	ldi	r25, 0x00	; 0
     7a6:	02 c0       	rjmp	.+4      	; 0x7ac <gpio_pin_direction_initialize+0x60>
     7a8:	88 0f       	add	r24, r24
     7aa:	99 1f       	adc	r25, r25
     7ac:	6a 95       	dec	r22
     7ae:	e2 f7       	brpl	.-8      	; 0x7a8 <gpio_pin_direction_initialize+0x5c>
     7b0:	82 2b       	or	r24, r18
     7b2:	80 83       	st	Z, r24
     7b4:	81 e0       	ldi	r24, 0x01	; 1
     7b6:	08 95       	ret
     7b8:	80 e0       	ldi	r24, 0x00	; 0
     7ba:	08 95       	ret
     7bc:	80 e0       	ldi	r24, 0x00	; 0
     7be:	08 95       	ret
     7c0:	80 e0       	ldi	r24, 0x00	; 0
     7c2:	08 95       	ret
     7c4:	81 e0       	ldi	r24, 0x01	; 1
     7c6:	08 95       	ret

000007c8 <gpio_set_pin>:
     7c8:	84 30       	cpi	r24, 0x04	; 4
     7ca:	b8 f4       	brcc	.+46     	; 0x7fa <gpio_set_pin+0x32>
     7cc:	68 30       	cpi	r22, 0x08	; 8
     7ce:	b8 f4       	brcc	.+46     	; 0x7fe <gpio_set_pin+0x36>
     7d0:	e8 2f       	mov	r30, r24
     7d2:	f0 e0       	ldi	r31, 0x00	; 0
     7d4:	ee 0f       	add	r30, r30
     7d6:	ff 1f       	adc	r31, r31
     7d8:	e7 59       	subi	r30, 0x97	; 151
     7da:	ff 4f       	sbci	r31, 0xFF	; 255
     7dc:	01 90       	ld	r0, Z+
     7de:	f0 81       	ld	r31, Z
     7e0:	e0 2d       	mov	r30, r0
     7e2:	20 81       	ld	r18, Z
     7e4:	81 e0       	ldi	r24, 0x01	; 1
     7e6:	90 e0       	ldi	r25, 0x00	; 0
     7e8:	02 c0       	rjmp	.+4      	; 0x7ee <gpio_set_pin+0x26>
     7ea:	88 0f       	add	r24, r24
     7ec:	99 1f       	adc	r25, r25
     7ee:	6a 95       	dec	r22
     7f0:	e2 f7       	brpl	.-8      	; 0x7ea <gpio_set_pin+0x22>
     7f2:	82 2b       	or	r24, r18
     7f4:	80 83       	st	Z, r24
     7f6:	81 e0       	ldi	r24, 0x01	; 1
     7f8:	08 95       	ret
     7fa:	80 e0       	ldi	r24, 0x00	; 0
     7fc:	08 95       	ret
     7fe:	80 e0       	ldi	r24, 0x00	; 0
     800:	08 95       	ret

00000802 <gpio_clear_pin>:
     802:	84 30       	cpi	r24, 0x04	; 4
     804:	c0 f4       	brcc	.+48     	; 0x836 <gpio_clear_pin+0x34>
     806:	68 30       	cpi	r22, 0x08	; 8
     808:	c0 f4       	brcc	.+48     	; 0x83a <gpio_clear_pin+0x38>
     80a:	e8 2f       	mov	r30, r24
     80c:	f0 e0       	ldi	r31, 0x00	; 0
     80e:	ee 0f       	add	r30, r30
     810:	ff 1f       	adc	r31, r31
     812:	e7 59       	subi	r30, 0x97	; 151
     814:	ff 4f       	sbci	r31, 0xFF	; 255
     816:	01 90       	ld	r0, Z+
     818:	f0 81       	ld	r31, Z
     81a:	e0 2d       	mov	r30, r0
     81c:	20 81       	ld	r18, Z
     81e:	81 e0       	ldi	r24, 0x01	; 1
     820:	90 e0       	ldi	r25, 0x00	; 0
     822:	02 c0       	rjmp	.+4      	; 0x828 <gpio_clear_pin+0x26>
     824:	88 0f       	add	r24, r24
     826:	99 1f       	adc	r25, r25
     828:	6a 95       	dec	r22
     82a:	e2 f7       	brpl	.-8      	; 0x824 <gpio_clear_pin+0x22>
     82c:	80 95       	com	r24
     82e:	82 23       	and	r24, r18
     830:	80 83       	st	Z, r24
     832:	81 e0       	ldi	r24, 0x01	; 1
     834:	08 95       	ret
     836:	80 e0       	ldi	r24, 0x00	; 0
     838:	08 95       	ret
     83a:	80 e0       	ldi	r24, 0x00	; 0
     83c:	08 95       	ret

0000083e <gpio_write_pin>:
 *       (R_OK) : The function done successfully
 */
ret_status gpio_write_pin(enum_port_type port_type,enum_pin_type pin_type,enum_pin_value_type pin_value_type)
{
	ret_status ret=R_NOK;
	if((port_type<PORT_INVALID)&&(pin_type<PIN_INVALID)&&(pin_value_type<VALUE_INVALID))
     83e:	84 30       	cpi	r24, 0x04	; 4
     840:	a0 f5       	brcc	.+104    	; 0x8aa <__stack+0x4b>
     842:	68 30       	cpi	r22, 0x08	; 8
     844:	a0 f5       	brcc	.+104    	; 0x8ae <__stack+0x4f>
     846:	42 30       	cpi	r20, 0x02	; 2
     848:	a0 f5       	brcc	.+104    	; 0x8b2 <__stack+0x53>
	{
		switch(pin_value_type)
     84a:	44 23       	and	r20, r20
     84c:	19 f0       	breq	.+6      	; 0x854 <gpio_write_pin+0x16>
     84e:	41 30       	cpi	r20, 0x01	; 1
     850:	b9 f0       	breq	.+46     	; 0x880 <__stack+0x21>
     852:	31 c0       	rjmp	.+98     	; 0x8b6 <__stack+0x57>
		{	case VALUE_LOW:
			{
				CLEAR_BIT(*port_register[port_type],pin_type);
     854:	e8 2f       	mov	r30, r24
     856:	f0 e0       	ldi	r31, 0x00	; 0
     858:	ee 0f       	add	r30, r30
     85a:	ff 1f       	adc	r31, r31
     85c:	e7 59       	subi	r30, 0x97	; 151
     85e:	ff 4f       	sbci	r31, 0xFF	; 255
     860:	01 90       	ld	r0, Z+
     862:	f0 81       	ld	r31, Z
     864:	e0 2d       	mov	r30, r0
     866:	20 81       	ld	r18, Z
     868:	81 e0       	ldi	r24, 0x01	; 1
     86a:	90 e0       	ldi	r25, 0x00	; 0
     86c:	02 c0       	rjmp	.+4      	; 0x872 <__stack+0x13>
     86e:	88 0f       	add	r24, r24
     870:	99 1f       	adc	r25, r25
     872:	6a 95       	dec	r22
     874:	e2 f7       	brpl	.-8      	; 0x86e <__stack+0xf>
     876:	80 95       	com	r24
     878:	82 23       	and	r24, r18
     87a:	80 83       	st	Z, r24
	}
	else
	{
		return ret;
	}
	return ret;
     87c:	81 e0       	ldi	r24, 0x01	; 1
	{
		switch(pin_value_type)
		{	case VALUE_LOW:
			{
				CLEAR_BIT(*port_register[port_type],pin_type);
				break;
     87e:	08 95       	ret
			}
			case VALUE_HIGH:
			{
				SET_BIT(*port_register[port_type],pin_type);
     880:	e8 2f       	mov	r30, r24
     882:	f0 e0       	ldi	r31, 0x00	; 0
     884:	ee 0f       	add	r30, r30
     886:	ff 1f       	adc	r31, r31
     888:	e7 59       	subi	r30, 0x97	; 151
     88a:	ff 4f       	sbci	r31, 0xFF	; 255
     88c:	01 90       	ld	r0, Z+
     88e:	f0 81       	ld	r31, Z
     890:	e0 2d       	mov	r30, r0
     892:	20 81       	ld	r18, Z
     894:	81 e0       	ldi	r24, 0x01	; 1
     896:	90 e0       	ldi	r25, 0x00	; 0
     898:	02 c0       	rjmp	.+4      	; 0x89e <__stack+0x3f>
     89a:	88 0f       	add	r24, r24
     89c:	99 1f       	adc	r25, r25
     89e:	6a 95       	dec	r22
     8a0:	e2 f7       	brpl	.-8      	; 0x89a <__stack+0x3b>
     8a2:	82 2b       	or	r24, r18
     8a4:	80 83       	st	Z, r24
	}
	else
	{
		return ret;
	}
	return ret;
     8a6:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case VALUE_HIGH:
			{
				SET_BIT(*port_register[port_type],pin_type);
				break;
     8a8:	08 95       	ret
		
		ret=R_OK;
	}
	else
	{
		return ret;
     8aa:	80 e0       	ldi	r24, 0x00	; 0
     8ac:	08 95       	ret
     8ae:	80 e0       	ldi	r24, 0x00	; 0
     8b0:	08 95       	ret
     8b2:	80 e0       	ldi	r24, 0x00	; 0
     8b4:	08 95       	ret
	}
	return ret;
     8b6:	81 e0       	ldi	r24, 0x01	; 1
}
     8b8:	08 95       	ret

000008ba <__vector_11>:
 {
	 Timer_0_OverFlowCallBackPointer = Copy_Ptr;
 }
 
 void __vector_11(void) /*Timer0 over flow ISR*/
 {
     8ba:	1f 92       	push	r1
     8bc:	0f 92       	push	r0
     8be:	0f b6       	in	r0, 0x3f	; 63
     8c0:	0f 92       	push	r0
     8c2:	11 24       	eor	r1, r1
     8c4:	2f 93       	push	r18
     8c6:	3f 93       	push	r19
     8c8:	4f 93       	push	r20
     8ca:	5f 93       	push	r21
     8cc:	6f 93       	push	r22
     8ce:	7f 93       	push	r23
     8d0:	8f 93       	push	r24
     8d2:	9f 93       	push	r25
     8d4:	af 93       	push	r26
     8d6:	bf 93       	push	r27
     8d8:	ef 93       	push	r30
     8da:	ff 93       	push	r31
	static uint32_type Local_u32Counter = 0;
	Local_u32Counter++;
     8dc:	60 91 80 00 	lds	r22, 0x0080	; 0x800080 <Local_u32Counter.2233>
     8e0:	70 91 81 00 	lds	r23, 0x0081	; 0x800081 <Local_u32Counter.2233+0x1>
     8e4:	6f 5f       	subi	r22, 0xFF	; 255
     8e6:	7f 4f       	sbci	r23, 0xFF	; 255
     8e8:	70 93 81 00 	sts	0x0081, r23	; 0x800081 <Local_u32Counter.2233+0x1>
     8ec:	60 93 80 00 	sts	0x0080, r22	; 0x800080 <Local_u32Counter.2233>
	if(Local_u32Counter == Timer_0_no_of_overflow)
     8f0:	80 e0       	ldi	r24, 0x00	; 0
     8f2:	90 e0       	ldi	r25, 0x00	; 0
     8f4:	0e 94 76 06 	call	0xcec	; 0xcec <__floatunsisf>
     8f8:	20 91 82 00 	lds	r18, 0x0082	; 0x800082 <Timer_0_no_of_overflow>
     8fc:	30 91 83 00 	lds	r19, 0x0083	; 0x800083 <Timer_0_no_of_overflow+0x1>
     900:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <Timer_0_no_of_overflow+0x2>
     904:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <Timer_0_no_of_overflow+0x3>
     908:	0e 94 d0 05 	call	0xba0	; 0xba0 <__cmpsf2>
     90c:	81 11       	cpse	r24, r1
     90e:	09 c0       	rjmp	.+18     	; 0x922 <__vector_11+0x68>
	{
		/*Run call back function for Timer0 over flow interrupt*/
		Timer_0_OverFlowCallBackPointer();
     910:	e0 91 86 00 	lds	r30, 0x0086	; 0x800086 <Timer_0_OverFlowCallBackPointer>
     914:	f0 91 87 00 	lds	r31, 0x0087	; 0x800087 <Timer_0_OverFlowCallBackPointer+0x1>
     918:	09 95       	icall
		Local_u32Counter=0;
     91a:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <Local_u32Counter.2233+0x1>
     91e:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <Local_u32Counter.2233>
	}
}
     922:	ff 91       	pop	r31
     924:	ef 91       	pop	r30
     926:	bf 91       	pop	r27
     928:	af 91       	pop	r26
     92a:	9f 91       	pop	r25
     92c:	8f 91       	pop	r24
     92e:	7f 91       	pop	r23
     930:	6f 91       	pop	r22
     932:	5f 91       	pop	r21
     934:	4f 91       	pop	r20
     936:	3f 91       	pop	r19
     938:	2f 91       	pop	r18
     93a:	0f 90       	pop	r0
     93c:	0f be       	out	0x3f, r0	; 63
     93e:	0f 90       	pop	r0
     940:	1f 90       	pop	r1
     942:	18 95       	reti

00000944 <Timer_1_init>:
	CLEAR_BIT(REG_TCCR1B,CS11);
	CLEAR_BIT(REG_TCCR1B,CS12);
}
void Timer_1_PWM_set_Duty_Cycle(uint8_type duty_cycle)
{
	REG_OCR1AL = (((uint8_type) duty_cycle * 256 ) / 100 ) - 1;
     944:	8f b5       	in	r24, 0x2f	; 47
     946:	8e 7f       	andi	r24, 0xFE	; 254
     948:	8f bd       	out	0x2f, r24	; 47
     94a:	8f b5       	in	r24, 0x2f	; 47
     94c:	8d 7f       	andi	r24, 0xFD	; 253
     94e:	8f bd       	out	0x2f, r24	; 47
     950:	8e b5       	in	r24, 0x2e	; 46
     952:	87 7f       	andi	r24, 0xF7	; 247
     954:	8e bd       	out	0x2e, r24	; 46
     956:	8e b5       	in	r24, 0x2e	; 46
     958:	8f 7e       	andi	r24, 0xEF	; 239
     95a:	8e bd       	out	0x2e, r24	; 46
     95c:	89 b7       	in	r24, 0x39	; 57
     95e:	84 60       	ori	r24, 0x04	; 4
     960:	89 bf       	out	0x39, r24	; 57
     962:	8f b7       	in	r24, 0x3f	; 63
     964:	80 68       	ori	r24, 0x80	; 128
     966:	8f bf       	out	0x3f, r24	; 63
     968:	08 95       	ret

0000096a <__vector_9>:
     96a:	1f 92       	push	r1
     96c:	0f 92       	push	r0
     96e:	0f b6       	in	r0, 0x3f	; 63
     970:	0f 92       	push	r0
     972:	11 24       	eor	r1, r1
     974:	2f 93       	push	r18
     976:	3f 93       	push	r19
     978:	4f 93       	push	r20
     97a:	5f 93       	push	r21
     97c:	6f 93       	push	r22
     97e:	7f 93       	push	r23
     980:	8f 93       	push	r24
     982:	9f 93       	push	r25
     984:	af 93       	push	r26
     986:	bf 93       	push	r27
     988:	ef 93       	push	r30
     98a:	ff 93       	push	r31
     98c:	60 91 88 00 	lds	r22, 0x0088	; 0x800088 <local_counter.2248>
     990:	70 91 89 00 	lds	r23, 0x0089	; 0x800089 <local_counter.2248+0x1>
     994:	6f 5f       	subi	r22, 0xFF	; 255
     996:	7f 4f       	sbci	r23, 0xFF	; 255
     998:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <local_counter.2248+0x1>
     99c:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <local_counter.2248>
     9a0:	80 e0       	ldi	r24, 0x00	; 0
     9a2:	90 e0       	ldi	r25, 0x00	; 0
     9a4:	0e 94 76 06 	call	0xcec	; 0xcec <__floatunsisf>
     9a8:	20 91 95 00 	lds	r18, 0x0095	; 0x800095 <Timer_1_number_of_overflow>
     9ac:	30 91 96 00 	lds	r19, 0x0096	; 0x800096 <Timer_1_number_of_overflow+0x1>
     9b0:	40 91 97 00 	lds	r20, 0x0097	; 0x800097 <Timer_1_number_of_overflow+0x2>
     9b4:	50 91 98 00 	lds	r21, 0x0098	; 0x800098 <Timer_1_number_of_overflow+0x3>
     9b8:	0e 94 d0 05 	call	0xba0	; 0xba0 <__cmpsf2>
     9bc:	81 11       	cpse	r24, r1
     9be:	09 c0       	rjmp	.+18     	; 0x9d2 <__vector_9+0x68>
     9c0:	e0 91 9b 00 	lds	r30, 0x009B	; 0x80009b <Timer_1_OverFlowCallBackPointer>
     9c4:	f0 91 9c 00 	lds	r31, 0x009C	; 0x80009c <Timer_1_OverFlowCallBackPointer+0x1>
     9c8:	09 95       	icall
     9ca:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <local_counter.2248+0x1>
     9ce:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <local_counter.2248>
     9d2:	ff 91       	pop	r31
     9d4:	ef 91       	pop	r30
     9d6:	bf 91       	pop	r27
     9d8:	af 91       	pop	r26
     9da:	9f 91       	pop	r25
     9dc:	8f 91       	pop	r24
     9de:	7f 91       	pop	r23
     9e0:	6f 91       	pop	r22
     9e2:	5f 91       	pop	r21
     9e4:	4f 91       	pop	r20
     9e6:	3f 91       	pop	r19
     9e8:	2f 91       	pop	r18
     9ea:	0f 90       	pop	r0
     9ec:	0f be       	out	0x3f, r0	; 63
     9ee:	0f 90       	pop	r0
     9f0:	1f 90       	pop	r1
     9f2:	18 95       	reti

000009f4 <Timer_1_InputCapture_init>:
}

void Timer_1_InputCapture_init(void)
{
	//to enable input capture circuit
	CLEAR_BIT(REG_DDRD,6);
     9f4:	81 b3       	in	r24, 0x11	; 17
     9f6:	8f 7b       	andi	r24, 0xBF	; 191
     9f8:	81 bb       	out	0x11, r24	; 17
	/*Capture at the rising edge*/
	SET_BIT(REG_TCCR1B,6);
     9fa:	8e b5       	in	r24, 0x2e	; 46
     9fc:	80 64       	ori	r24, 0x40	; 64
     9fe:	8e bd       	out	0x2e, r24	; 46
	/*Enable input capture interrupt*/
	SET_BIT(REG_TIMSK,5);
     a00:	89 b7       	in	r24, 0x39	; 57
     a02:	80 62       	ori	r24, 0x20	; 32
     a04:	89 bf       	out	0x39, r24	; 57
     a06:	08 95       	ret

00000a08 <Timer_1_InputCapture_Start>:
}

void Timer_1_InputCapture_Start(void)
{
	/*Set Prescaler at 8MHZ*/
	CLEAR_BIT(REG_TCCR1B,0);
     a08:	8e b5       	in	r24, 0x2e	; 46
     a0a:	8e 7f       	andi	r24, 0xFE	; 254
     a0c:	8e bd       	out	0x2e, r24	; 46
	SET_BIT(REG_TCCR1B,1);
     a0e:	8e b5       	in	r24, 0x2e	; 46
     a10:	82 60       	ori	r24, 0x02	; 2
     a12:	8e bd       	out	0x2e, r24	; 46
	CLEAR_BIT(REG_TCCR1B,2);
     a14:	8e b5       	in	r24, 0x2e	; 46
     a16:	8b 7f       	andi	r24, 0xFB	; 251
     a18:	8e bd       	out	0x2e, r24	; 46
     a1a:	08 95       	ret

00000a1c <Timer_1_set_InputCapture_Callback>:
}
void Timer_1_set_InputCapture_Callback(void(*copy_pointer)(void))
{
	Timer_1_CaptureEventCallBackpointer=copy_pointer;
     a1c:	90 93 9a 00 	sts	0x009A, r25	; 0x80009a <Timer_1_CaptureEventCallBackpointer+0x1>
     a20:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <Timer_1_CaptureEventCallBackpointer>
     a24:	08 95       	ret

00000a26 <__vector_6>:
}

void __vector_6(void)
{
     a26:	1f 92       	push	r1
     a28:	0f 92       	push	r0
     a2a:	0f b6       	in	r0, 0x3f	; 63
     a2c:	0f 92       	push	r0
     a2e:	11 24       	eor	r1, r1
     a30:	2f 93       	push	r18
     a32:	3f 93       	push	r19
     a34:	4f 93       	push	r20
     a36:	5f 93       	push	r21
     a38:	6f 93       	push	r22
     a3a:	7f 93       	push	r23
     a3c:	8f 93       	push	r24
     a3e:	9f 93       	push	r25
     a40:	af 93       	push	r26
     a42:	bf 93       	push	r27
     a44:	ef 93       	push	r30
     a46:	ff 93       	push	r31
	if(cap_num==0)
     a48:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <cap_num>
     a4c:	81 11       	cpse	r24, r1
     a4e:	13 c0       	rjmp	.+38     	; 0xa76 <__vector_6+0x50>
	{
		Cap_edge_1=(REG_ICR1H<<8)|REG_ICR1L;
     a50:	87 b5       	in	r24, 0x27	; 39
     a52:	90 e0       	ldi	r25, 0x00	; 0
     a54:	98 2f       	mov	r25, r24
     a56:	88 27       	eor	r24, r24
     a58:	26 b5       	in	r18, 0x26	; 38
     a5a:	82 2b       	or	r24, r18
     a5c:	90 93 94 00 	sts	0x0094, r25	; 0x800094 <Cap_edge_1+0x1>
     a60:	80 93 93 00 	sts	0x0093, r24	; 0x800093 <Cap_edge_1>
		Timer_1_number_of_overflow=0;
     a64:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <Timer_1_number_of_overflow>
     a68:	10 92 96 00 	sts	0x0096, r1	; 0x800096 <Timer_1_number_of_overflow+0x1>
     a6c:	10 92 97 00 	sts	0x0097, r1	; 0x800097 <Timer_1_number_of_overflow+0x2>
     a70:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <Timer_1_number_of_overflow+0x3>
     a74:	14 c0       	rjmp	.+40     	; 0xa9e <__vector_6+0x78>
	}
	else if(cap_num==1)
     a76:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <cap_num>
     a7a:	81 30       	cpi	r24, 0x01	; 1
     a7c:	81 f4       	brne	.+32     	; 0xa9e <__vector_6+0x78>
	{
		Cap_edge_2=(REG_ICR1H<<8)|REG_ICR1L;
     a7e:	87 b5       	in	r24, 0x27	; 39
     a80:	90 e0       	ldi	r25, 0x00	; 0
     a82:	98 2f       	mov	r25, r24
     a84:	88 27       	eor	r24, r24
     a86:	26 b5       	in	r18, 0x26	; 38
     a88:	82 2b       	or	r24, r18
     a8a:	90 93 92 00 	sts	0x0092, r25	; 0x800092 <Cap_edge_2+0x1>
     a8e:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <Cap_edge_2>
		/*Disable input capture interrupt*/
		CLEAR_BIT(REG_TIMSK,5);
     a92:	89 b7       	in	r24, 0x39	; 57
     a94:	8f 7d       	andi	r24, 0xDF	; 223
     a96:	89 bf       	out	0x39, r24	; 57
		/*Disable Timer_1 Interrupt Overflow Flag*/
		CLEAR_BIT(REG_TIMSK,TOIE1);
     a98:	89 b7       	in	r24, 0x39	; 57
     a9a:	8b 7f       	andi	r24, 0xFB	; 251
     a9c:	89 bf       	out	0x39, r24	; 57
	}
	cap_num++;
     a9e:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <cap_num>
     aa2:	8f 5f       	subi	r24, 0xFF	; 255
     aa4:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <cap_num>
	if(cap_num==2)
     aa8:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <cap_num>
     aac:	82 30       	cpi	r24, 0x02	; 2
     aae:	39 f4       	brne	.+14     	; 0xabe <__vector_6+0x98>
	{
		Timer_1_CaptureEventCallBackpointer();
     ab0:	e0 91 99 00 	lds	r30, 0x0099	; 0x800099 <Timer_1_CaptureEventCallBackpointer>
     ab4:	f0 91 9a 00 	lds	r31, 0x009A	; 0x80009a <Timer_1_CaptureEventCallBackpointer+0x1>
     ab8:	09 95       	icall
		cap_num=0;
     aba:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <cap_num>
	}	
}
     abe:	ff 91       	pop	r31
     ac0:	ef 91       	pop	r30
     ac2:	bf 91       	pop	r27
     ac4:	af 91       	pop	r26
     ac6:	9f 91       	pop	r25
     ac8:	8f 91       	pop	r24
     aca:	7f 91       	pop	r23
     acc:	6f 91       	pop	r22
     ace:	5f 91       	pop	r21
     ad0:	4f 91       	pop	r20
     ad2:	3f 91       	pop	r19
     ad4:	2f 91       	pop	r18
     ad6:	0f 90       	pop	r0
     ad8:	0f be       	out	0x3f, r0	; 63
     ada:	0f 90       	pop	r0
     adc:	1f 90       	pop	r1
     ade:	18 95       	reti

00000ae0 <Timer_1_Cap_calculate>:

void Timer_1_Cap_calculate(uint32_type* signal_frequency)
{
     ae0:	cf 93       	push	r28
     ae2:	df 93       	push	r29
     ae4:	ec 01       	movw	r28, r24
	Capture_ticks=((uint32_type)Cap_edge_1+(uint32_type)Timer_1_number_of_overflow*65536)-(uint32_type)Cap_edge_2;
     ae6:	80 91 95 00 	lds	r24, 0x0095	; 0x800095 <Timer_1_number_of_overflow>
     aea:	90 91 96 00 	lds	r25, 0x0096	; 0x800096 <Timer_1_number_of_overflow+0x1>
     aee:	a0 91 97 00 	lds	r26, 0x0097	; 0x800097 <Timer_1_number_of_overflow+0x2>
     af2:	b0 91 98 00 	lds	r27, 0x0098	; 0x800098 <Timer_1_number_of_overflow+0x3>
     af6:	80 91 93 00 	lds	r24, 0x0093	; 0x800093 <Cap_edge_1>
     afa:	90 91 94 00 	lds	r25, 0x0094	; 0x800094 <Cap_edge_1+0x1>
     afe:	20 91 91 00 	lds	r18, 0x0091	; 0x800091 <Cap_edge_2>
     b02:	30 91 92 00 	lds	r19, 0x0092	; 0x800092 <Cap_edge_2+0x1>
     b06:	82 1b       	sub	r24, r18
     b08:	93 0b       	sbc	r25, r19
     b0a:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <Capture_ticks+0x1>
     b0e:	80 93 8f 00 	sts	0x008F, r24	; 0x80008f <Capture_ticks>
	//Tick Time = 8 / 16*10^6 = 0.5 us
	capture_clk= Capture_ticks*0.5;          //period time in micro second 
     b12:	60 91 8f 00 	lds	r22, 0x008F	; 0x80008f <Capture_ticks>
     b16:	70 91 90 00 	lds	r23, 0x0090	; 0x800090 <Capture_ticks+0x1>
     b1a:	80 e0       	ldi	r24, 0x00	; 0
     b1c:	90 e0       	ldi	r25, 0x00	; 0
     b1e:	0e 94 76 06 	call	0xcec	; 0xcec <__floatunsisf>
     b22:	20 e0       	ldi	r18, 0x00	; 0
     b24:	30 e0       	ldi	r19, 0x00	; 0
     b26:	40 e0       	ldi	r20, 0x00	; 0
     b28:	5f e3       	ldi	r21, 0x3F	; 63
     b2a:	0e 94 28 07 	call	0xe50	; 0xe50 <__mulsf3>
     b2e:	0e 94 47 06 	call	0xc8e	; 0xc8e <__fixunssfsi>
     b32:	70 93 8e 00 	sts	0x008E, r23	; 0x80008e <capture_clk+0x1>
     b36:	60 93 8d 00 	sts	0x008D, r22	; 0x80008d <capture_clk>
	capture_freq=(1/(float32_type)capture_clk)*1000000;    //frequency in HZ
     b3a:	60 91 8d 00 	lds	r22, 0x008D	; 0x80008d <capture_clk>
     b3e:	70 91 8e 00 	lds	r23, 0x008E	; 0x80008e <capture_clk+0x1>
     b42:	80 e0       	ldi	r24, 0x00	; 0
     b44:	90 e0       	ldi	r25, 0x00	; 0
     b46:	0e 94 76 06 	call	0xcec	; 0xcec <__floatunsisf>
     b4a:	9b 01       	movw	r18, r22
     b4c:	ac 01       	movw	r20, r24
     b4e:	60 e0       	ldi	r22, 0x00	; 0
     b50:	70 e0       	ldi	r23, 0x00	; 0
     b52:	80 e8       	ldi	r24, 0x80	; 128
     b54:	9f e3       	ldi	r25, 0x3F	; 63
     b56:	0e 94 d5 05 	call	0xbaa	; 0xbaa <__divsf3>
     b5a:	20 e0       	ldi	r18, 0x00	; 0
     b5c:	34 e2       	ldi	r19, 0x24	; 36
     b5e:	44 e7       	ldi	r20, 0x74	; 116
     b60:	59 e4       	ldi	r21, 0x49	; 73
     b62:	0e 94 28 07 	call	0xe50	; 0xe50 <__mulsf3>
     b66:	0e 94 47 06 	call	0xc8e	; 0xc8e <__fixunssfsi>
     b6a:	70 93 8c 00 	sts	0x008C, r23	; 0x80008c <capture_freq+0x1>
     b6e:	60 93 8b 00 	sts	0x008B, r22	; 0x80008b <capture_freq>
	*signal_frequency=capture_freq;
     b72:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <capture_freq>
     b76:	90 91 8c 00 	lds	r25, 0x008C	; 0x80008c <capture_freq+0x1>
     b7a:	99 83       	std	Y+1, r25	; 0x01
     b7c:	88 83       	st	Y, r24
	/*Enable input capture interrupt*/
	SET_BIT(REG_TIMSK,5);
     b7e:	89 b7       	in	r24, 0x39	; 57
     b80:	80 62       	ori	r24, 0x20	; 32
     b82:	89 bf       	out	0x39, r24	; 57
	/*Enable Timer_1 Interrupt Overflow Flag*/
	SET_BIT(REG_TIMSK,TOIE1);
     b84:	89 b7       	in	r24, 0x39	; 57
     b86:	84 60       	ori	r24, 0x04	; 4
     b88:	89 bf       	out	0x39, r24	; 57
	Timer_1_number_of_overflow=0;
     b8a:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <Timer_1_number_of_overflow>
     b8e:	10 92 96 00 	sts	0x0096, r1	; 0x800096 <Timer_1_number_of_overflow+0x1>
     b92:	10 92 97 00 	sts	0x0097, r1	; 0x800097 <Timer_1_number_of_overflow+0x2>
     b96:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <Timer_1_number_of_overflow+0x3>
	
     b9a:	df 91       	pop	r29
     b9c:	cf 91       	pop	r28
     b9e:	08 95       	ret

00000ba0 <__cmpsf2>:
     ba0:	0e 94 b3 06 	call	0xd66	; 0xd66 <__fp_cmp>
     ba4:	08 f4       	brcc	.+2      	; 0xba8 <__cmpsf2+0x8>
     ba6:	81 e0       	ldi	r24, 0x01	; 1
     ba8:	08 95       	ret

00000baa <__divsf3>:
     baa:	0e 94 e9 05 	call	0xbd2	; 0xbd2 <__divsf3x>
     bae:	0c 94 ee 06 	jmp	0xddc	; 0xddc <__fp_round>
     bb2:	0e 94 e7 06 	call	0xdce	; 0xdce <__fp_pscB>
     bb6:	58 f0       	brcs	.+22     	; 0xbce <__divsf3+0x24>
     bb8:	0e 94 e0 06 	call	0xdc0	; 0xdc0 <__fp_pscA>
     bbc:	40 f0       	brcs	.+16     	; 0xbce <__divsf3+0x24>
     bbe:	29 f4       	brne	.+10     	; 0xbca <__divsf3+0x20>
     bc0:	5f 3f       	cpi	r21, 0xFF	; 255
     bc2:	29 f0       	breq	.+10     	; 0xbce <__divsf3+0x24>
     bc4:	0c 94 d7 06 	jmp	0xdae	; 0xdae <__fp_inf>
     bc8:	51 11       	cpse	r21, r1
     bca:	0c 94 22 07 	jmp	0xe44	; 0xe44 <__fp_szero>
     bce:	0c 94 dd 06 	jmp	0xdba	; 0xdba <__fp_nan>

00000bd2 <__divsf3x>:
     bd2:	0e 94 ff 06 	call	0xdfe	; 0xdfe <__fp_split3>
     bd6:	68 f3       	brcs	.-38     	; 0xbb2 <__divsf3+0x8>

00000bd8 <__divsf3_pse>:
     bd8:	99 23       	and	r25, r25
     bda:	b1 f3       	breq	.-20     	; 0xbc8 <__divsf3+0x1e>
     bdc:	55 23       	and	r21, r21
     bde:	91 f3       	breq	.-28     	; 0xbc4 <__divsf3+0x1a>
     be0:	95 1b       	sub	r25, r21
     be2:	55 0b       	sbc	r21, r21
     be4:	bb 27       	eor	r27, r27
     be6:	aa 27       	eor	r26, r26
     be8:	62 17       	cp	r22, r18
     bea:	73 07       	cpc	r23, r19
     bec:	84 07       	cpc	r24, r20
     bee:	38 f0       	brcs	.+14     	; 0xbfe <__divsf3_pse+0x26>
     bf0:	9f 5f       	subi	r25, 0xFF	; 255
     bf2:	5f 4f       	sbci	r21, 0xFF	; 255
     bf4:	22 0f       	add	r18, r18
     bf6:	33 1f       	adc	r19, r19
     bf8:	44 1f       	adc	r20, r20
     bfa:	aa 1f       	adc	r26, r26
     bfc:	a9 f3       	breq	.-22     	; 0xbe8 <__divsf3_pse+0x10>
     bfe:	35 d0       	rcall	.+106    	; 0xc6a <__divsf3_pse+0x92>
     c00:	0e 2e       	mov	r0, r30
     c02:	3a f0       	brmi	.+14     	; 0xc12 <__divsf3_pse+0x3a>
     c04:	e0 e8       	ldi	r30, 0x80	; 128
     c06:	32 d0       	rcall	.+100    	; 0xc6c <__divsf3_pse+0x94>
     c08:	91 50       	subi	r25, 0x01	; 1
     c0a:	50 40       	sbci	r21, 0x00	; 0
     c0c:	e6 95       	lsr	r30
     c0e:	00 1c       	adc	r0, r0
     c10:	ca f7       	brpl	.-14     	; 0xc04 <__divsf3_pse+0x2c>
     c12:	2b d0       	rcall	.+86     	; 0xc6a <__divsf3_pse+0x92>
     c14:	fe 2f       	mov	r31, r30
     c16:	29 d0       	rcall	.+82     	; 0xc6a <__divsf3_pse+0x92>
     c18:	66 0f       	add	r22, r22
     c1a:	77 1f       	adc	r23, r23
     c1c:	88 1f       	adc	r24, r24
     c1e:	bb 1f       	adc	r27, r27
     c20:	26 17       	cp	r18, r22
     c22:	37 07       	cpc	r19, r23
     c24:	48 07       	cpc	r20, r24
     c26:	ab 07       	cpc	r26, r27
     c28:	b0 e8       	ldi	r27, 0x80	; 128
     c2a:	09 f0       	breq	.+2      	; 0xc2e <__divsf3_pse+0x56>
     c2c:	bb 0b       	sbc	r27, r27
     c2e:	80 2d       	mov	r24, r0
     c30:	bf 01       	movw	r22, r30
     c32:	ff 27       	eor	r31, r31
     c34:	93 58       	subi	r25, 0x83	; 131
     c36:	5f 4f       	sbci	r21, 0xFF	; 255
     c38:	3a f0       	brmi	.+14     	; 0xc48 <__divsf3_pse+0x70>
     c3a:	9e 3f       	cpi	r25, 0xFE	; 254
     c3c:	51 05       	cpc	r21, r1
     c3e:	78 f0       	brcs	.+30     	; 0xc5e <__divsf3_pse+0x86>
     c40:	0c 94 d7 06 	jmp	0xdae	; 0xdae <__fp_inf>
     c44:	0c 94 22 07 	jmp	0xe44	; 0xe44 <__fp_szero>
     c48:	5f 3f       	cpi	r21, 0xFF	; 255
     c4a:	e4 f3       	brlt	.-8      	; 0xc44 <__divsf3_pse+0x6c>
     c4c:	98 3e       	cpi	r25, 0xE8	; 232
     c4e:	d4 f3       	brlt	.-12     	; 0xc44 <__divsf3_pse+0x6c>
     c50:	86 95       	lsr	r24
     c52:	77 95       	ror	r23
     c54:	67 95       	ror	r22
     c56:	b7 95       	ror	r27
     c58:	f7 95       	ror	r31
     c5a:	9f 5f       	subi	r25, 0xFF	; 255
     c5c:	c9 f7       	brne	.-14     	; 0xc50 <__divsf3_pse+0x78>
     c5e:	88 0f       	add	r24, r24
     c60:	91 1d       	adc	r25, r1
     c62:	96 95       	lsr	r25
     c64:	87 95       	ror	r24
     c66:	97 f9       	bld	r25, 7
     c68:	08 95       	ret
     c6a:	e1 e0       	ldi	r30, 0x01	; 1
     c6c:	66 0f       	add	r22, r22
     c6e:	77 1f       	adc	r23, r23
     c70:	88 1f       	adc	r24, r24
     c72:	bb 1f       	adc	r27, r27
     c74:	62 17       	cp	r22, r18
     c76:	73 07       	cpc	r23, r19
     c78:	84 07       	cpc	r24, r20
     c7a:	ba 07       	cpc	r27, r26
     c7c:	20 f0       	brcs	.+8      	; 0xc86 <__divsf3_pse+0xae>
     c7e:	62 1b       	sub	r22, r18
     c80:	73 0b       	sbc	r23, r19
     c82:	84 0b       	sbc	r24, r20
     c84:	ba 0b       	sbc	r27, r26
     c86:	ee 1f       	adc	r30, r30
     c88:	88 f7       	brcc	.-30     	; 0xc6c <__divsf3_pse+0x94>
     c8a:	e0 95       	com	r30
     c8c:	08 95       	ret

00000c8e <__fixunssfsi>:
     c8e:	0e 94 07 07 	call	0xe0e	; 0xe0e <__fp_splitA>
     c92:	88 f0       	brcs	.+34     	; 0xcb6 <__fixunssfsi+0x28>
     c94:	9f 57       	subi	r25, 0x7F	; 127
     c96:	98 f0       	brcs	.+38     	; 0xcbe <__fixunssfsi+0x30>
     c98:	b9 2f       	mov	r27, r25
     c9a:	99 27       	eor	r25, r25
     c9c:	b7 51       	subi	r27, 0x17	; 23
     c9e:	b0 f0       	brcs	.+44     	; 0xccc <__fixunssfsi+0x3e>
     ca0:	e1 f0       	breq	.+56     	; 0xcda <__fixunssfsi+0x4c>
     ca2:	66 0f       	add	r22, r22
     ca4:	77 1f       	adc	r23, r23
     ca6:	88 1f       	adc	r24, r24
     ca8:	99 1f       	adc	r25, r25
     caa:	1a f0       	brmi	.+6      	; 0xcb2 <__fixunssfsi+0x24>
     cac:	ba 95       	dec	r27
     cae:	c9 f7       	brne	.-14     	; 0xca2 <__fixunssfsi+0x14>
     cb0:	14 c0       	rjmp	.+40     	; 0xcda <__fixunssfsi+0x4c>
     cb2:	b1 30       	cpi	r27, 0x01	; 1
     cb4:	91 f0       	breq	.+36     	; 0xcda <__fixunssfsi+0x4c>
     cb6:	0e 94 21 07 	call	0xe42	; 0xe42 <__fp_zero>
     cba:	b1 e0       	ldi	r27, 0x01	; 1
     cbc:	08 95       	ret
     cbe:	0c 94 21 07 	jmp	0xe42	; 0xe42 <__fp_zero>
     cc2:	67 2f       	mov	r22, r23
     cc4:	78 2f       	mov	r23, r24
     cc6:	88 27       	eor	r24, r24
     cc8:	b8 5f       	subi	r27, 0xF8	; 248
     cca:	39 f0       	breq	.+14     	; 0xcda <__fixunssfsi+0x4c>
     ccc:	b9 3f       	cpi	r27, 0xF9	; 249
     cce:	cc f3       	brlt	.-14     	; 0xcc2 <__fixunssfsi+0x34>
     cd0:	86 95       	lsr	r24
     cd2:	77 95       	ror	r23
     cd4:	67 95       	ror	r22
     cd6:	b3 95       	inc	r27
     cd8:	d9 f7       	brne	.-10     	; 0xcd0 <__fixunssfsi+0x42>
     cda:	3e f4       	brtc	.+14     	; 0xcea <__fixunssfsi+0x5c>
     cdc:	90 95       	com	r25
     cde:	80 95       	com	r24
     ce0:	70 95       	com	r23
     ce2:	61 95       	neg	r22
     ce4:	7f 4f       	sbci	r23, 0xFF	; 255
     ce6:	8f 4f       	sbci	r24, 0xFF	; 255
     ce8:	9f 4f       	sbci	r25, 0xFF	; 255
     cea:	08 95       	ret

00000cec <__floatunsisf>:
     cec:	e8 94       	clt
     cee:	09 c0       	rjmp	.+18     	; 0xd02 <__floatsisf+0x12>

00000cf0 <__floatsisf>:
     cf0:	97 fb       	bst	r25, 7
     cf2:	3e f4       	brtc	.+14     	; 0xd02 <__floatsisf+0x12>
     cf4:	90 95       	com	r25
     cf6:	80 95       	com	r24
     cf8:	70 95       	com	r23
     cfa:	61 95       	neg	r22
     cfc:	7f 4f       	sbci	r23, 0xFF	; 255
     cfe:	8f 4f       	sbci	r24, 0xFF	; 255
     d00:	9f 4f       	sbci	r25, 0xFF	; 255
     d02:	99 23       	and	r25, r25
     d04:	a9 f0       	breq	.+42     	; 0xd30 <__floatsisf+0x40>
     d06:	f9 2f       	mov	r31, r25
     d08:	96 e9       	ldi	r25, 0x96	; 150
     d0a:	bb 27       	eor	r27, r27
     d0c:	93 95       	inc	r25
     d0e:	f6 95       	lsr	r31
     d10:	87 95       	ror	r24
     d12:	77 95       	ror	r23
     d14:	67 95       	ror	r22
     d16:	b7 95       	ror	r27
     d18:	f1 11       	cpse	r31, r1
     d1a:	f8 cf       	rjmp	.-16     	; 0xd0c <__floatsisf+0x1c>
     d1c:	fa f4       	brpl	.+62     	; 0xd5c <__floatsisf+0x6c>
     d1e:	bb 0f       	add	r27, r27
     d20:	11 f4       	brne	.+4      	; 0xd26 <__floatsisf+0x36>
     d22:	60 ff       	sbrs	r22, 0
     d24:	1b c0       	rjmp	.+54     	; 0xd5c <__floatsisf+0x6c>
     d26:	6f 5f       	subi	r22, 0xFF	; 255
     d28:	7f 4f       	sbci	r23, 0xFF	; 255
     d2a:	8f 4f       	sbci	r24, 0xFF	; 255
     d2c:	9f 4f       	sbci	r25, 0xFF	; 255
     d2e:	16 c0       	rjmp	.+44     	; 0xd5c <__floatsisf+0x6c>
     d30:	88 23       	and	r24, r24
     d32:	11 f0       	breq	.+4      	; 0xd38 <__floatsisf+0x48>
     d34:	96 e9       	ldi	r25, 0x96	; 150
     d36:	11 c0       	rjmp	.+34     	; 0xd5a <__floatsisf+0x6a>
     d38:	77 23       	and	r23, r23
     d3a:	21 f0       	breq	.+8      	; 0xd44 <__floatsisf+0x54>
     d3c:	9e e8       	ldi	r25, 0x8E	; 142
     d3e:	87 2f       	mov	r24, r23
     d40:	76 2f       	mov	r23, r22
     d42:	05 c0       	rjmp	.+10     	; 0xd4e <__floatsisf+0x5e>
     d44:	66 23       	and	r22, r22
     d46:	71 f0       	breq	.+28     	; 0xd64 <__floatsisf+0x74>
     d48:	96 e8       	ldi	r25, 0x86	; 134
     d4a:	86 2f       	mov	r24, r22
     d4c:	70 e0       	ldi	r23, 0x00	; 0
     d4e:	60 e0       	ldi	r22, 0x00	; 0
     d50:	2a f0       	brmi	.+10     	; 0xd5c <__floatsisf+0x6c>
     d52:	9a 95       	dec	r25
     d54:	66 0f       	add	r22, r22
     d56:	77 1f       	adc	r23, r23
     d58:	88 1f       	adc	r24, r24
     d5a:	da f7       	brpl	.-10     	; 0xd52 <__floatsisf+0x62>
     d5c:	88 0f       	add	r24, r24
     d5e:	96 95       	lsr	r25
     d60:	87 95       	ror	r24
     d62:	97 f9       	bld	r25, 7
     d64:	08 95       	ret

00000d66 <__fp_cmp>:
     d66:	99 0f       	add	r25, r25
     d68:	00 08       	sbc	r0, r0
     d6a:	55 0f       	add	r21, r21
     d6c:	aa 0b       	sbc	r26, r26
     d6e:	e0 e8       	ldi	r30, 0x80	; 128
     d70:	fe ef       	ldi	r31, 0xFE	; 254
     d72:	16 16       	cp	r1, r22
     d74:	17 06       	cpc	r1, r23
     d76:	e8 07       	cpc	r30, r24
     d78:	f9 07       	cpc	r31, r25
     d7a:	c0 f0       	brcs	.+48     	; 0xdac <__fp_cmp+0x46>
     d7c:	12 16       	cp	r1, r18
     d7e:	13 06       	cpc	r1, r19
     d80:	e4 07       	cpc	r30, r20
     d82:	f5 07       	cpc	r31, r21
     d84:	98 f0       	brcs	.+38     	; 0xdac <__fp_cmp+0x46>
     d86:	62 1b       	sub	r22, r18
     d88:	73 0b       	sbc	r23, r19
     d8a:	84 0b       	sbc	r24, r20
     d8c:	95 0b       	sbc	r25, r21
     d8e:	39 f4       	brne	.+14     	; 0xd9e <__fp_cmp+0x38>
     d90:	0a 26       	eor	r0, r26
     d92:	61 f0       	breq	.+24     	; 0xdac <__fp_cmp+0x46>
     d94:	23 2b       	or	r18, r19
     d96:	24 2b       	or	r18, r20
     d98:	25 2b       	or	r18, r21
     d9a:	21 f4       	brne	.+8      	; 0xda4 <__fp_cmp+0x3e>
     d9c:	08 95       	ret
     d9e:	0a 26       	eor	r0, r26
     da0:	09 f4       	brne	.+2      	; 0xda4 <__fp_cmp+0x3e>
     da2:	a1 40       	sbci	r26, 0x01	; 1
     da4:	a6 95       	lsr	r26
     da6:	8f ef       	ldi	r24, 0xFF	; 255
     da8:	81 1d       	adc	r24, r1
     daa:	81 1d       	adc	r24, r1
     dac:	08 95       	ret

00000dae <__fp_inf>:
     dae:	97 f9       	bld	r25, 7
     db0:	9f 67       	ori	r25, 0x7F	; 127
     db2:	80 e8       	ldi	r24, 0x80	; 128
     db4:	70 e0       	ldi	r23, 0x00	; 0
     db6:	60 e0       	ldi	r22, 0x00	; 0
     db8:	08 95       	ret

00000dba <__fp_nan>:
     dba:	9f ef       	ldi	r25, 0xFF	; 255
     dbc:	80 ec       	ldi	r24, 0xC0	; 192
     dbe:	08 95       	ret

00000dc0 <__fp_pscA>:
     dc0:	00 24       	eor	r0, r0
     dc2:	0a 94       	dec	r0
     dc4:	16 16       	cp	r1, r22
     dc6:	17 06       	cpc	r1, r23
     dc8:	18 06       	cpc	r1, r24
     dca:	09 06       	cpc	r0, r25
     dcc:	08 95       	ret

00000dce <__fp_pscB>:
     dce:	00 24       	eor	r0, r0
     dd0:	0a 94       	dec	r0
     dd2:	12 16       	cp	r1, r18
     dd4:	13 06       	cpc	r1, r19
     dd6:	14 06       	cpc	r1, r20
     dd8:	05 06       	cpc	r0, r21
     dda:	08 95       	ret

00000ddc <__fp_round>:
     ddc:	09 2e       	mov	r0, r25
     dde:	03 94       	inc	r0
     de0:	00 0c       	add	r0, r0
     de2:	11 f4       	brne	.+4      	; 0xde8 <__fp_round+0xc>
     de4:	88 23       	and	r24, r24
     de6:	52 f0       	brmi	.+20     	; 0xdfc <__fp_round+0x20>
     de8:	bb 0f       	add	r27, r27
     dea:	40 f4       	brcc	.+16     	; 0xdfc <__fp_round+0x20>
     dec:	bf 2b       	or	r27, r31
     dee:	11 f4       	brne	.+4      	; 0xdf4 <__fp_round+0x18>
     df0:	60 ff       	sbrs	r22, 0
     df2:	04 c0       	rjmp	.+8      	; 0xdfc <__fp_round+0x20>
     df4:	6f 5f       	subi	r22, 0xFF	; 255
     df6:	7f 4f       	sbci	r23, 0xFF	; 255
     df8:	8f 4f       	sbci	r24, 0xFF	; 255
     dfa:	9f 4f       	sbci	r25, 0xFF	; 255
     dfc:	08 95       	ret

00000dfe <__fp_split3>:
     dfe:	57 fd       	sbrc	r21, 7
     e00:	90 58       	subi	r25, 0x80	; 128
     e02:	44 0f       	add	r20, r20
     e04:	55 1f       	adc	r21, r21
     e06:	59 f0       	breq	.+22     	; 0xe1e <__fp_splitA+0x10>
     e08:	5f 3f       	cpi	r21, 0xFF	; 255
     e0a:	71 f0       	breq	.+28     	; 0xe28 <__fp_splitA+0x1a>
     e0c:	47 95       	ror	r20

00000e0e <__fp_splitA>:
     e0e:	88 0f       	add	r24, r24
     e10:	97 fb       	bst	r25, 7
     e12:	99 1f       	adc	r25, r25
     e14:	61 f0       	breq	.+24     	; 0xe2e <__fp_splitA+0x20>
     e16:	9f 3f       	cpi	r25, 0xFF	; 255
     e18:	79 f0       	breq	.+30     	; 0xe38 <__fp_splitA+0x2a>
     e1a:	87 95       	ror	r24
     e1c:	08 95       	ret
     e1e:	12 16       	cp	r1, r18
     e20:	13 06       	cpc	r1, r19
     e22:	14 06       	cpc	r1, r20
     e24:	55 1f       	adc	r21, r21
     e26:	f2 cf       	rjmp	.-28     	; 0xe0c <__fp_split3+0xe>
     e28:	46 95       	lsr	r20
     e2a:	f1 df       	rcall	.-30     	; 0xe0e <__fp_splitA>
     e2c:	08 c0       	rjmp	.+16     	; 0xe3e <__fp_splitA+0x30>
     e2e:	16 16       	cp	r1, r22
     e30:	17 06       	cpc	r1, r23
     e32:	18 06       	cpc	r1, r24
     e34:	99 1f       	adc	r25, r25
     e36:	f1 cf       	rjmp	.-30     	; 0xe1a <__fp_splitA+0xc>
     e38:	86 95       	lsr	r24
     e3a:	71 05       	cpc	r23, r1
     e3c:	61 05       	cpc	r22, r1
     e3e:	08 94       	sec
     e40:	08 95       	ret

00000e42 <__fp_zero>:
     e42:	e8 94       	clt

00000e44 <__fp_szero>:
     e44:	bb 27       	eor	r27, r27
     e46:	66 27       	eor	r22, r22
     e48:	77 27       	eor	r23, r23
     e4a:	cb 01       	movw	r24, r22
     e4c:	97 f9       	bld	r25, 7
     e4e:	08 95       	ret

00000e50 <__mulsf3>:
     e50:	0e 94 3b 07 	call	0xe76	; 0xe76 <__mulsf3x>
     e54:	0c 94 ee 06 	jmp	0xddc	; 0xddc <__fp_round>
     e58:	0e 94 e0 06 	call	0xdc0	; 0xdc0 <__fp_pscA>
     e5c:	38 f0       	brcs	.+14     	; 0xe6c <__mulsf3+0x1c>
     e5e:	0e 94 e7 06 	call	0xdce	; 0xdce <__fp_pscB>
     e62:	20 f0       	brcs	.+8      	; 0xe6c <__mulsf3+0x1c>
     e64:	95 23       	and	r25, r21
     e66:	11 f0       	breq	.+4      	; 0xe6c <__mulsf3+0x1c>
     e68:	0c 94 d7 06 	jmp	0xdae	; 0xdae <__fp_inf>
     e6c:	0c 94 dd 06 	jmp	0xdba	; 0xdba <__fp_nan>
     e70:	11 24       	eor	r1, r1
     e72:	0c 94 22 07 	jmp	0xe44	; 0xe44 <__fp_szero>

00000e76 <__mulsf3x>:
     e76:	0e 94 ff 06 	call	0xdfe	; 0xdfe <__fp_split3>
     e7a:	70 f3       	brcs	.-36     	; 0xe58 <__mulsf3+0x8>

00000e7c <__mulsf3_pse>:
     e7c:	95 9f       	mul	r25, r21
     e7e:	c1 f3       	breq	.-16     	; 0xe70 <__mulsf3+0x20>
     e80:	95 0f       	add	r25, r21
     e82:	50 e0       	ldi	r21, 0x00	; 0
     e84:	55 1f       	adc	r21, r21
     e86:	62 9f       	mul	r22, r18
     e88:	f0 01       	movw	r30, r0
     e8a:	72 9f       	mul	r23, r18
     e8c:	bb 27       	eor	r27, r27
     e8e:	f0 0d       	add	r31, r0
     e90:	b1 1d       	adc	r27, r1
     e92:	63 9f       	mul	r22, r19
     e94:	aa 27       	eor	r26, r26
     e96:	f0 0d       	add	r31, r0
     e98:	b1 1d       	adc	r27, r1
     e9a:	aa 1f       	adc	r26, r26
     e9c:	64 9f       	mul	r22, r20
     e9e:	66 27       	eor	r22, r22
     ea0:	b0 0d       	add	r27, r0
     ea2:	a1 1d       	adc	r26, r1
     ea4:	66 1f       	adc	r22, r22
     ea6:	82 9f       	mul	r24, r18
     ea8:	22 27       	eor	r18, r18
     eaa:	b0 0d       	add	r27, r0
     eac:	a1 1d       	adc	r26, r1
     eae:	62 1f       	adc	r22, r18
     eb0:	73 9f       	mul	r23, r19
     eb2:	b0 0d       	add	r27, r0
     eb4:	a1 1d       	adc	r26, r1
     eb6:	62 1f       	adc	r22, r18
     eb8:	83 9f       	mul	r24, r19
     eba:	a0 0d       	add	r26, r0
     ebc:	61 1d       	adc	r22, r1
     ebe:	22 1f       	adc	r18, r18
     ec0:	74 9f       	mul	r23, r20
     ec2:	33 27       	eor	r19, r19
     ec4:	a0 0d       	add	r26, r0
     ec6:	61 1d       	adc	r22, r1
     ec8:	23 1f       	adc	r18, r19
     eca:	84 9f       	mul	r24, r20
     ecc:	60 0d       	add	r22, r0
     ece:	21 1d       	adc	r18, r1
     ed0:	82 2f       	mov	r24, r18
     ed2:	76 2f       	mov	r23, r22
     ed4:	6a 2f       	mov	r22, r26
     ed6:	11 24       	eor	r1, r1
     ed8:	9f 57       	subi	r25, 0x7F	; 127
     eda:	50 40       	sbci	r21, 0x00	; 0
     edc:	9a f0       	brmi	.+38     	; 0xf04 <__mulsf3_pse+0x88>
     ede:	f1 f0       	breq	.+60     	; 0xf1c <__mulsf3_pse+0xa0>
     ee0:	88 23       	and	r24, r24
     ee2:	4a f0       	brmi	.+18     	; 0xef6 <__mulsf3_pse+0x7a>
     ee4:	ee 0f       	add	r30, r30
     ee6:	ff 1f       	adc	r31, r31
     ee8:	bb 1f       	adc	r27, r27
     eea:	66 1f       	adc	r22, r22
     eec:	77 1f       	adc	r23, r23
     eee:	88 1f       	adc	r24, r24
     ef0:	91 50       	subi	r25, 0x01	; 1
     ef2:	50 40       	sbci	r21, 0x00	; 0
     ef4:	a9 f7       	brne	.-22     	; 0xee0 <__mulsf3_pse+0x64>
     ef6:	9e 3f       	cpi	r25, 0xFE	; 254
     ef8:	51 05       	cpc	r21, r1
     efa:	80 f0       	brcs	.+32     	; 0xf1c <__mulsf3_pse+0xa0>
     efc:	0c 94 d7 06 	jmp	0xdae	; 0xdae <__fp_inf>
     f00:	0c 94 22 07 	jmp	0xe44	; 0xe44 <__fp_szero>
     f04:	5f 3f       	cpi	r21, 0xFF	; 255
     f06:	e4 f3       	brlt	.-8      	; 0xf00 <__mulsf3_pse+0x84>
     f08:	98 3e       	cpi	r25, 0xE8	; 232
     f0a:	d4 f3       	brlt	.-12     	; 0xf00 <__mulsf3_pse+0x84>
     f0c:	86 95       	lsr	r24
     f0e:	77 95       	ror	r23
     f10:	67 95       	ror	r22
     f12:	b7 95       	ror	r27
     f14:	f7 95       	ror	r31
     f16:	e7 95       	ror	r30
     f18:	9f 5f       	subi	r25, 0xFF	; 255
     f1a:	c1 f7       	brne	.-16     	; 0xf0c <__mulsf3_pse+0x90>
     f1c:	fe 2b       	or	r31, r30
     f1e:	88 0f       	add	r24, r24
     f20:	91 1d       	adc	r25, r1
     f22:	96 95       	lsr	r25
     f24:	87 95       	ror	r24
     f26:	97 f9       	bld	r25, 7
     f28:	08 95       	ret

00000f2a <sprintf>:
     f2a:	ae e0       	ldi	r26, 0x0E	; 14
     f2c:	b0 e0       	ldi	r27, 0x00	; 0
     f2e:	eb e9       	ldi	r30, 0x9B	; 155
     f30:	f7 e0       	ldi	r31, 0x07	; 7
     f32:	0c 94 56 0a 	jmp	0x14ac	; 0x14ac <__prologue_saves__+0x1c>
     f36:	0d 89       	ldd	r16, Y+21	; 0x15
     f38:	1e 89       	ldd	r17, Y+22	; 0x16
     f3a:	86 e0       	ldi	r24, 0x06	; 6
     f3c:	8c 83       	std	Y+4, r24	; 0x04
     f3e:	1a 83       	std	Y+2, r17	; 0x02
     f40:	09 83       	std	Y+1, r16	; 0x01
     f42:	8f ef       	ldi	r24, 0xFF	; 255
     f44:	9f e7       	ldi	r25, 0x7F	; 127
     f46:	9e 83       	std	Y+6, r25	; 0x06
     f48:	8d 83       	std	Y+5, r24	; 0x05
     f4a:	ae 01       	movw	r20, r28
     f4c:	47 5e       	subi	r20, 0xE7	; 231
     f4e:	5f 4f       	sbci	r21, 0xFF	; 255
     f50:	6f 89       	ldd	r22, Y+23	; 0x17
     f52:	78 8d       	ldd	r23, Y+24	; 0x18
     f54:	ce 01       	movw	r24, r28
     f56:	01 96       	adiw	r24, 0x01	; 1
     f58:	0e 94 b7 07 	call	0xf6e	; 0xf6e <vfprintf>
     f5c:	ef 81       	ldd	r30, Y+7	; 0x07
     f5e:	f8 85       	ldd	r31, Y+8	; 0x08
     f60:	e0 0f       	add	r30, r16
     f62:	f1 1f       	adc	r31, r17
     f64:	10 82       	st	Z, r1
     f66:	2e 96       	adiw	r28, 0x0e	; 14
     f68:	e4 e0       	ldi	r30, 0x04	; 4
     f6a:	0c 94 72 0a 	jmp	0x14e4	; 0x14e4 <__epilogue_restores__+0x1c>

00000f6e <vfprintf>:
     f6e:	ab e0       	ldi	r26, 0x0B	; 11
     f70:	b0 e0       	ldi	r27, 0x00	; 0
     f72:	ed eb       	ldi	r30, 0xBD	; 189
     f74:	f7 e0       	ldi	r31, 0x07	; 7
     f76:	0c 94 48 0a 	jmp	0x1490	; 0x1490 <__prologue_saves__>
     f7a:	6c 01       	movw	r12, r24
     f7c:	7b 01       	movw	r14, r22
     f7e:	8a 01       	movw	r16, r20
     f80:	fc 01       	movw	r30, r24
     f82:	17 82       	std	Z+7, r1	; 0x07
     f84:	16 82       	std	Z+6, r1	; 0x06
     f86:	83 81       	ldd	r24, Z+3	; 0x03
     f88:	81 ff       	sbrs	r24, 1
     f8a:	cc c1       	rjmp	.+920    	; 0x1324 <vfprintf+0x3b6>
     f8c:	ce 01       	movw	r24, r28
     f8e:	01 96       	adiw	r24, 0x01	; 1
     f90:	3c 01       	movw	r6, r24
     f92:	f6 01       	movw	r30, r12
     f94:	93 81       	ldd	r25, Z+3	; 0x03
     f96:	f7 01       	movw	r30, r14
     f98:	93 fd       	sbrc	r25, 3
     f9a:	85 91       	lpm	r24, Z+
     f9c:	93 ff       	sbrs	r25, 3
     f9e:	81 91       	ld	r24, Z+
     fa0:	7f 01       	movw	r14, r30
     fa2:	88 23       	and	r24, r24
     fa4:	09 f4       	brne	.+2      	; 0xfa8 <vfprintf+0x3a>
     fa6:	ba c1       	rjmp	.+884    	; 0x131c <vfprintf+0x3ae>
     fa8:	85 32       	cpi	r24, 0x25	; 37
     faa:	39 f4       	brne	.+14     	; 0xfba <vfprintf+0x4c>
     fac:	93 fd       	sbrc	r25, 3
     fae:	85 91       	lpm	r24, Z+
     fb0:	93 ff       	sbrs	r25, 3
     fb2:	81 91       	ld	r24, Z+
     fb4:	7f 01       	movw	r14, r30
     fb6:	85 32       	cpi	r24, 0x25	; 37
     fb8:	29 f4       	brne	.+10     	; 0xfc4 <vfprintf+0x56>
     fba:	b6 01       	movw	r22, r12
     fbc:	90 e0       	ldi	r25, 0x00	; 0
     fbe:	0e 94 ae 09 	call	0x135c	; 0x135c <fputc>
     fc2:	e7 cf       	rjmp	.-50     	; 0xf92 <vfprintf+0x24>
     fc4:	91 2c       	mov	r9, r1
     fc6:	21 2c       	mov	r2, r1
     fc8:	31 2c       	mov	r3, r1
     fca:	ff e1       	ldi	r31, 0x1F	; 31
     fcc:	f3 15       	cp	r31, r3
     fce:	d8 f0       	brcs	.+54     	; 0x1006 <vfprintf+0x98>
     fd0:	8b 32       	cpi	r24, 0x2B	; 43
     fd2:	79 f0       	breq	.+30     	; 0xff2 <vfprintf+0x84>
     fd4:	38 f4       	brcc	.+14     	; 0xfe4 <vfprintf+0x76>
     fd6:	80 32       	cpi	r24, 0x20	; 32
     fd8:	79 f0       	breq	.+30     	; 0xff8 <vfprintf+0x8a>
     fda:	83 32       	cpi	r24, 0x23	; 35
     fdc:	a1 f4       	brne	.+40     	; 0x1006 <vfprintf+0x98>
     fde:	23 2d       	mov	r18, r3
     fe0:	20 61       	ori	r18, 0x10	; 16
     fe2:	1d c0       	rjmp	.+58     	; 0x101e <vfprintf+0xb0>
     fe4:	8d 32       	cpi	r24, 0x2D	; 45
     fe6:	61 f0       	breq	.+24     	; 0x1000 <vfprintf+0x92>
     fe8:	80 33       	cpi	r24, 0x30	; 48
     fea:	69 f4       	brne	.+26     	; 0x1006 <vfprintf+0x98>
     fec:	23 2d       	mov	r18, r3
     fee:	21 60       	ori	r18, 0x01	; 1
     ff0:	16 c0       	rjmp	.+44     	; 0x101e <vfprintf+0xb0>
     ff2:	83 2d       	mov	r24, r3
     ff4:	82 60       	ori	r24, 0x02	; 2
     ff6:	38 2e       	mov	r3, r24
     ff8:	e3 2d       	mov	r30, r3
     ffa:	e4 60       	ori	r30, 0x04	; 4
     ffc:	3e 2e       	mov	r3, r30
     ffe:	2a c0       	rjmp	.+84     	; 0x1054 <vfprintf+0xe6>
    1000:	f3 2d       	mov	r31, r3
    1002:	f8 60       	ori	r31, 0x08	; 8
    1004:	1d c0       	rjmp	.+58     	; 0x1040 <vfprintf+0xd2>
    1006:	37 fc       	sbrc	r3, 7
    1008:	2d c0       	rjmp	.+90     	; 0x1064 <vfprintf+0xf6>
    100a:	20 ed       	ldi	r18, 0xD0	; 208
    100c:	28 0f       	add	r18, r24
    100e:	2a 30       	cpi	r18, 0x0A	; 10
    1010:	40 f0       	brcs	.+16     	; 0x1022 <vfprintf+0xb4>
    1012:	8e 32       	cpi	r24, 0x2E	; 46
    1014:	b9 f4       	brne	.+46     	; 0x1044 <vfprintf+0xd6>
    1016:	36 fc       	sbrc	r3, 6
    1018:	81 c1       	rjmp	.+770    	; 0x131c <vfprintf+0x3ae>
    101a:	23 2d       	mov	r18, r3
    101c:	20 64       	ori	r18, 0x40	; 64
    101e:	32 2e       	mov	r3, r18
    1020:	19 c0       	rjmp	.+50     	; 0x1054 <vfprintf+0xe6>
    1022:	36 fe       	sbrs	r3, 6
    1024:	06 c0       	rjmp	.+12     	; 0x1032 <vfprintf+0xc4>
    1026:	8a e0       	ldi	r24, 0x0A	; 10
    1028:	98 9e       	mul	r9, r24
    102a:	20 0d       	add	r18, r0
    102c:	11 24       	eor	r1, r1
    102e:	92 2e       	mov	r9, r18
    1030:	11 c0       	rjmp	.+34     	; 0x1054 <vfprintf+0xe6>
    1032:	ea e0       	ldi	r30, 0x0A	; 10
    1034:	2e 9e       	mul	r2, r30
    1036:	20 0d       	add	r18, r0
    1038:	11 24       	eor	r1, r1
    103a:	22 2e       	mov	r2, r18
    103c:	f3 2d       	mov	r31, r3
    103e:	f0 62       	ori	r31, 0x20	; 32
    1040:	3f 2e       	mov	r3, r31
    1042:	08 c0       	rjmp	.+16     	; 0x1054 <vfprintf+0xe6>
    1044:	8c 36       	cpi	r24, 0x6C	; 108
    1046:	21 f4       	brne	.+8      	; 0x1050 <vfprintf+0xe2>
    1048:	83 2d       	mov	r24, r3
    104a:	80 68       	ori	r24, 0x80	; 128
    104c:	38 2e       	mov	r3, r24
    104e:	02 c0       	rjmp	.+4      	; 0x1054 <vfprintf+0xe6>
    1050:	88 36       	cpi	r24, 0x68	; 104
    1052:	41 f4       	brne	.+16     	; 0x1064 <vfprintf+0xf6>
    1054:	f7 01       	movw	r30, r14
    1056:	93 fd       	sbrc	r25, 3
    1058:	85 91       	lpm	r24, Z+
    105a:	93 ff       	sbrs	r25, 3
    105c:	81 91       	ld	r24, Z+
    105e:	7f 01       	movw	r14, r30
    1060:	81 11       	cpse	r24, r1
    1062:	b3 cf       	rjmp	.-154    	; 0xfca <vfprintf+0x5c>
    1064:	98 2f       	mov	r25, r24
    1066:	9f 7d       	andi	r25, 0xDF	; 223
    1068:	95 54       	subi	r25, 0x45	; 69
    106a:	93 30       	cpi	r25, 0x03	; 3
    106c:	28 f4       	brcc	.+10     	; 0x1078 <vfprintf+0x10a>
    106e:	0c 5f       	subi	r16, 0xFC	; 252
    1070:	1f 4f       	sbci	r17, 0xFF	; 255
    1072:	9f e3       	ldi	r25, 0x3F	; 63
    1074:	99 83       	std	Y+1, r25	; 0x01
    1076:	0d c0       	rjmp	.+26     	; 0x1092 <vfprintf+0x124>
    1078:	83 36       	cpi	r24, 0x63	; 99
    107a:	31 f0       	breq	.+12     	; 0x1088 <vfprintf+0x11a>
    107c:	83 37       	cpi	r24, 0x73	; 115
    107e:	71 f0       	breq	.+28     	; 0x109c <vfprintf+0x12e>
    1080:	83 35       	cpi	r24, 0x53	; 83
    1082:	09 f0       	breq	.+2      	; 0x1086 <vfprintf+0x118>
    1084:	59 c0       	rjmp	.+178    	; 0x1138 <vfprintf+0x1ca>
    1086:	21 c0       	rjmp	.+66     	; 0x10ca <vfprintf+0x15c>
    1088:	f8 01       	movw	r30, r16
    108a:	80 81       	ld	r24, Z
    108c:	89 83       	std	Y+1, r24	; 0x01
    108e:	0e 5f       	subi	r16, 0xFE	; 254
    1090:	1f 4f       	sbci	r17, 0xFF	; 255
    1092:	88 24       	eor	r8, r8
    1094:	83 94       	inc	r8
    1096:	91 2c       	mov	r9, r1
    1098:	53 01       	movw	r10, r6
    109a:	13 c0       	rjmp	.+38     	; 0x10c2 <vfprintf+0x154>
    109c:	28 01       	movw	r4, r16
    109e:	f2 e0       	ldi	r31, 0x02	; 2
    10a0:	4f 0e       	add	r4, r31
    10a2:	51 1c       	adc	r5, r1
    10a4:	f8 01       	movw	r30, r16
    10a6:	a0 80       	ld	r10, Z
    10a8:	b1 80       	ldd	r11, Z+1	; 0x01
    10aa:	36 fe       	sbrs	r3, 6
    10ac:	03 c0       	rjmp	.+6      	; 0x10b4 <vfprintf+0x146>
    10ae:	69 2d       	mov	r22, r9
    10b0:	70 e0       	ldi	r23, 0x00	; 0
    10b2:	02 c0       	rjmp	.+4      	; 0x10b8 <vfprintf+0x14a>
    10b4:	6f ef       	ldi	r22, 0xFF	; 255
    10b6:	7f ef       	ldi	r23, 0xFF	; 255
    10b8:	c5 01       	movw	r24, r10
    10ba:	0e 94 a3 09 	call	0x1346	; 0x1346 <strnlen>
    10be:	4c 01       	movw	r8, r24
    10c0:	82 01       	movw	r16, r4
    10c2:	f3 2d       	mov	r31, r3
    10c4:	ff 77       	andi	r31, 0x7F	; 127
    10c6:	3f 2e       	mov	r3, r31
    10c8:	16 c0       	rjmp	.+44     	; 0x10f6 <vfprintf+0x188>
    10ca:	28 01       	movw	r4, r16
    10cc:	22 e0       	ldi	r18, 0x02	; 2
    10ce:	42 0e       	add	r4, r18
    10d0:	51 1c       	adc	r5, r1
    10d2:	f8 01       	movw	r30, r16
    10d4:	a0 80       	ld	r10, Z
    10d6:	b1 80       	ldd	r11, Z+1	; 0x01
    10d8:	36 fe       	sbrs	r3, 6
    10da:	03 c0       	rjmp	.+6      	; 0x10e2 <vfprintf+0x174>
    10dc:	69 2d       	mov	r22, r9
    10de:	70 e0       	ldi	r23, 0x00	; 0
    10e0:	02 c0       	rjmp	.+4      	; 0x10e6 <vfprintf+0x178>
    10e2:	6f ef       	ldi	r22, 0xFF	; 255
    10e4:	7f ef       	ldi	r23, 0xFF	; 255
    10e6:	c5 01       	movw	r24, r10
    10e8:	0e 94 98 09 	call	0x1330	; 0x1330 <strnlen_P>
    10ec:	4c 01       	movw	r8, r24
    10ee:	f3 2d       	mov	r31, r3
    10f0:	f0 68       	ori	r31, 0x80	; 128
    10f2:	3f 2e       	mov	r3, r31
    10f4:	82 01       	movw	r16, r4
    10f6:	33 fc       	sbrc	r3, 3
    10f8:	1b c0       	rjmp	.+54     	; 0x1130 <vfprintf+0x1c2>
    10fa:	82 2d       	mov	r24, r2
    10fc:	90 e0       	ldi	r25, 0x00	; 0
    10fe:	88 16       	cp	r8, r24
    1100:	99 06       	cpc	r9, r25
    1102:	b0 f4       	brcc	.+44     	; 0x1130 <vfprintf+0x1c2>
    1104:	b6 01       	movw	r22, r12
    1106:	80 e2       	ldi	r24, 0x20	; 32
    1108:	90 e0       	ldi	r25, 0x00	; 0
    110a:	0e 94 ae 09 	call	0x135c	; 0x135c <fputc>
    110e:	2a 94       	dec	r2
    1110:	f4 cf       	rjmp	.-24     	; 0x10fa <vfprintf+0x18c>
    1112:	f5 01       	movw	r30, r10
    1114:	37 fc       	sbrc	r3, 7
    1116:	85 91       	lpm	r24, Z+
    1118:	37 fe       	sbrs	r3, 7
    111a:	81 91       	ld	r24, Z+
    111c:	5f 01       	movw	r10, r30
    111e:	b6 01       	movw	r22, r12
    1120:	90 e0       	ldi	r25, 0x00	; 0
    1122:	0e 94 ae 09 	call	0x135c	; 0x135c <fputc>
    1126:	21 10       	cpse	r2, r1
    1128:	2a 94       	dec	r2
    112a:	21 e0       	ldi	r18, 0x01	; 1
    112c:	82 1a       	sub	r8, r18
    112e:	91 08       	sbc	r9, r1
    1130:	81 14       	cp	r8, r1
    1132:	91 04       	cpc	r9, r1
    1134:	71 f7       	brne	.-36     	; 0x1112 <vfprintf+0x1a4>
    1136:	e8 c0       	rjmp	.+464    	; 0x1308 <vfprintf+0x39a>
    1138:	84 36       	cpi	r24, 0x64	; 100
    113a:	11 f0       	breq	.+4      	; 0x1140 <vfprintf+0x1d2>
    113c:	89 36       	cpi	r24, 0x69	; 105
    113e:	41 f5       	brne	.+80     	; 0x1190 <vfprintf+0x222>
    1140:	f8 01       	movw	r30, r16
    1142:	37 fe       	sbrs	r3, 7
    1144:	07 c0       	rjmp	.+14     	; 0x1154 <vfprintf+0x1e6>
    1146:	60 81       	ld	r22, Z
    1148:	71 81       	ldd	r23, Z+1	; 0x01
    114a:	82 81       	ldd	r24, Z+2	; 0x02
    114c:	93 81       	ldd	r25, Z+3	; 0x03
    114e:	0c 5f       	subi	r16, 0xFC	; 252
    1150:	1f 4f       	sbci	r17, 0xFF	; 255
    1152:	08 c0       	rjmp	.+16     	; 0x1164 <vfprintf+0x1f6>
    1154:	60 81       	ld	r22, Z
    1156:	71 81       	ldd	r23, Z+1	; 0x01
    1158:	07 2e       	mov	r0, r23
    115a:	00 0c       	add	r0, r0
    115c:	88 0b       	sbc	r24, r24
    115e:	99 0b       	sbc	r25, r25
    1160:	0e 5f       	subi	r16, 0xFE	; 254
    1162:	1f 4f       	sbci	r17, 0xFF	; 255
    1164:	f3 2d       	mov	r31, r3
    1166:	ff 76       	andi	r31, 0x6F	; 111
    1168:	3f 2e       	mov	r3, r31
    116a:	97 ff       	sbrs	r25, 7
    116c:	09 c0       	rjmp	.+18     	; 0x1180 <vfprintf+0x212>
    116e:	90 95       	com	r25
    1170:	80 95       	com	r24
    1172:	70 95       	com	r23
    1174:	61 95       	neg	r22
    1176:	7f 4f       	sbci	r23, 0xFF	; 255
    1178:	8f 4f       	sbci	r24, 0xFF	; 255
    117a:	9f 4f       	sbci	r25, 0xFF	; 255
    117c:	f0 68       	ori	r31, 0x80	; 128
    117e:	3f 2e       	mov	r3, r31
    1180:	2a e0       	ldi	r18, 0x0A	; 10
    1182:	30 e0       	ldi	r19, 0x00	; 0
    1184:	a3 01       	movw	r20, r6
    1186:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <__ultoa_invert>
    118a:	88 2e       	mov	r8, r24
    118c:	86 18       	sub	r8, r6
    118e:	45 c0       	rjmp	.+138    	; 0x121a <vfprintf+0x2ac>
    1190:	85 37       	cpi	r24, 0x75	; 117
    1192:	31 f4       	brne	.+12     	; 0x11a0 <vfprintf+0x232>
    1194:	23 2d       	mov	r18, r3
    1196:	2f 7e       	andi	r18, 0xEF	; 239
    1198:	b2 2e       	mov	r11, r18
    119a:	2a e0       	ldi	r18, 0x0A	; 10
    119c:	30 e0       	ldi	r19, 0x00	; 0
    119e:	25 c0       	rjmp	.+74     	; 0x11ea <vfprintf+0x27c>
    11a0:	93 2d       	mov	r25, r3
    11a2:	99 7f       	andi	r25, 0xF9	; 249
    11a4:	b9 2e       	mov	r11, r25
    11a6:	8f 36       	cpi	r24, 0x6F	; 111
    11a8:	c1 f0       	breq	.+48     	; 0x11da <vfprintf+0x26c>
    11aa:	18 f4       	brcc	.+6      	; 0x11b2 <vfprintf+0x244>
    11ac:	88 35       	cpi	r24, 0x58	; 88
    11ae:	79 f0       	breq	.+30     	; 0x11ce <vfprintf+0x260>
    11b0:	b5 c0       	rjmp	.+362    	; 0x131c <vfprintf+0x3ae>
    11b2:	80 37       	cpi	r24, 0x70	; 112
    11b4:	19 f0       	breq	.+6      	; 0x11bc <vfprintf+0x24e>
    11b6:	88 37       	cpi	r24, 0x78	; 120
    11b8:	21 f0       	breq	.+8      	; 0x11c2 <vfprintf+0x254>
    11ba:	b0 c0       	rjmp	.+352    	; 0x131c <vfprintf+0x3ae>
    11bc:	e9 2f       	mov	r30, r25
    11be:	e0 61       	ori	r30, 0x10	; 16
    11c0:	be 2e       	mov	r11, r30
    11c2:	b4 fe       	sbrs	r11, 4
    11c4:	0d c0       	rjmp	.+26     	; 0x11e0 <vfprintf+0x272>
    11c6:	fb 2d       	mov	r31, r11
    11c8:	f4 60       	ori	r31, 0x04	; 4
    11ca:	bf 2e       	mov	r11, r31
    11cc:	09 c0       	rjmp	.+18     	; 0x11e0 <vfprintf+0x272>
    11ce:	34 fe       	sbrs	r3, 4
    11d0:	0a c0       	rjmp	.+20     	; 0x11e6 <vfprintf+0x278>
    11d2:	29 2f       	mov	r18, r25
    11d4:	26 60       	ori	r18, 0x06	; 6
    11d6:	b2 2e       	mov	r11, r18
    11d8:	06 c0       	rjmp	.+12     	; 0x11e6 <vfprintf+0x278>
    11da:	28 e0       	ldi	r18, 0x08	; 8
    11dc:	30 e0       	ldi	r19, 0x00	; 0
    11de:	05 c0       	rjmp	.+10     	; 0x11ea <vfprintf+0x27c>
    11e0:	20 e1       	ldi	r18, 0x10	; 16
    11e2:	30 e0       	ldi	r19, 0x00	; 0
    11e4:	02 c0       	rjmp	.+4      	; 0x11ea <vfprintf+0x27c>
    11e6:	20 e1       	ldi	r18, 0x10	; 16
    11e8:	32 e0       	ldi	r19, 0x02	; 2
    11ea:	f8 01       	movw	r30, r16
    11ec:	b7 fe       	sbrs	r11, 7
    11ee:	07 c0       	rjmp	.+14     	; 0x11fe <vfprintf+0x290>
    11f0:	60 81       	ld	r22, Z
    11f2:	71 81       	ldd	r23, Z+1	; 0x01
    11f4:	82 81       	ldd	r24, Z+2	; 0x02
    11f6:	93 81       	ldd	r25, Z+3	; 0x03
    11f8:	0c 5f       	subi	r16, 0xFC	; 252
    11fa:	1f 4f       	sbci	r17, 0xFF	; 255
    11fc:	06 c0       	rjmp	.+12     	; 0x120a <vfprintf+0x29c>
    11fe:	60 81       	ld	r22, Z
    1200:	71 81       	ldd	r23, Z+1	; 0x01
    1202:	80 e0       	ldi	r24, 0x00	; 0
    1204:	90 e0       	ldi	r25, 0x00	; 0
    1206:	0e 5f       	subi	r16, 0xFE	; 254
    1208:	1f 4f       	sbci	r17, 0xFF	; 255
    120a:	a3 01       	movw	r20, r6
    120c:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <__ultoa_invert>
    1210:	88 2e       	mov	r8, r24
    1212:	86 18       	sub	r8, r6
    1214:	fb 2d       	mov	r31, r11
    1216:	ff 77       	andi	r31, 0x7F	; 127
    1218:	3f 2e       	mov	r3, r31
    121a:	36 fe       	sbrs	r3, 6
    121c:	0d c0       	rjmp	.+26     	; 0x1238 <vfprintf+0x2ca>
    121e:	23 2d       	mov	r18, r3
    1220:	2e 7f       	andi	r18, 0xFE	; 254
    1222:	a2 2e       	mov	r10, r18
    1224:	89 14       	cp	r8, r9
    1226:	58 f4       	brcc	.+22     	; 0x123e <vfprintf+0x2d0>
    1228:	34 fe       	sbrs	r3, 4
    122a:	0b c0       	rjmp	.+22     	; 0x1242 <vfprintf+0x2d4>
    122c:	32 fc       	sbrc	r3, 2
    122e:	09 c0       	rjmp	.+18     	; 0x1242 <vfprintf+0x2d4>
    1230:	83 2d       	mov	r24, r3
    1232:	8e 7e       	andi	r24, 0xEE	; 238
    1234:	a8 2e       	mov	r10, r24
    1236:	05 c0       	rjmp	.+10     	; 0x1242 <vfprintf+0x2d4>
    1238:	b8 2c       	mov	r11, r8
    123a:	a3 2c       	mov	r10, r3
    123c:	03 c0       	rjmp	.+6      	; 0x1244 <vfprintf+0x2d6>
    123e:	b8 2c       	mov	r11, r8
    1240:	01 c0       	rjmp	.+2      	; 0x1244 <vfprintf+0x2d6>
    1242:	b9 2c       	mov	r11, r9
    1244:	a4 fe       	sbrs	r10, 4
    1246:	0f c0       	rjmp	.+30     	; 0x1266 <vfprintf+0x2f8>
    1248:	fe 01       	movw	r30, r28
    124a:	e8 0d       	add	r30, r8
    124c:	f1 1d       	adc	r31, r1
    124e:	80 81       	ld	r24, Z
    1250:	80 33       	cpi	r24, 0x30	; 48
    1252:	21 f4       	brne	.+8      	; 0x125c <vfprintf+0x2ee>
    1254:	9a 2d       	mov	r25, r10
    1256:	99 7e       	andi	r25, 0xE9	; 233
    1258:	a9 2e       	mov	r10, r25
    125a:	09 c0       	rjmp	.+18     	; 0x126e <vfprintf+0x300>
    125c:	a2 fe       	sbrs	r10, 2
    125e:	06 c0       	rjmp	.+12     	; 0x126c <vfprintf+0x2fe>
    1260:	b3 94       	inc	r11
    1262:	b3 94       	inc	r11
    1264:	04 c0       	rjmp	.+8      	; 0x126e <vfprintf+0x300>
    1266:	8a 2d       	mov	r24, r10
    1268:	86 78       	andi	r24, 0x86	; 134
    126a:	09 f0       	breq	.+2      	; 0x126e <vfprintf+0x300>
    126c:	b3 94       	inc	r11
    126e:	a3 fc       	sbrc	r10, 3
    1270:	11 c0       	rjmp	.+34     	; 0x1294 <vfprintf+0x326>
    1272:	a0 fe       	sbrs	r10, 0
    1274:	06 c0       	rjmp	.+12     	; 0x1282 <vfprintf+0x314>
    1276:	b2 14       	cp	r11, r2
    1278:	88 f4       	brcc	.+34     	; 0x129c <vfprintf+0x32e>
    127a:	28 0c       	add	r2, r8
    127c:	92 2c       	mov	r9, r2
    127e:	9b 18       	sub	r9, r11
    1280:	0e c0       	rjmp	.+28     	; 0x129e <vfprintf+0x330>
    1282:	b2 14       	cp	r11, r2
    1284:	60 f4       	brcc	.+24     	; 0x129e <vfprintf+0x330>
    1286:	b6 01       	movw	r22, r12
    1288:	80 e2       	ldi	r24, 0x20	; 32
    128a:	90 e0       	ldi	r25, 0x00	; 0
    128c:	0e 94 ae 09 	call	0x135c	; 0x135c <fputc>
    1290:	b3 94       	inc	r11
    1292:	f7 cf       	rjmp	.-18     	; 0x1282 <vfprintf+0x314>
    1294:	b2 14       	cp	r11, r2
    1296:	18 f4       	brcc	.+6      	; 0x129e <vfprintf+0x330>
    1298:	2b 18       	sub	r2, r11
    129a:	02 c0       	rjmp	.+4      	; 0x12a0 <vfprintf+0x332>
    129c:	98 2c       	mov	r9, r8
    129e:	21 2c       	mov	r2, r1
    12a0:	a4 fe       	sbrs	r10, 4
    12a2:	10 c0       	rjmp	.+32     	; 0x12c4 <vfprintf+0x356>
    12a4:	b6 01       	movw	r22, r12
    12a6:	80 e3       	ldi	r24, 0x30	; 48
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	0e 94 ae 09 	call	0x135c	; 0x135c <fputc>
    12ae:	a2 fe       	sbrs	r10, 2
    12b0:	17 c0       	rjmp	.+46     	; 0x12e0 <vfprintf+0x372>
    12b2:	a1 fc       	sbrc	r10, 1
    12b4:	03 c0       	rjmp	.+6      	; 0x12bc <vfprintf+0x34e>
    12b6:	88 e7       	ldi	r24, 0x78	; 120
    12b8:	90 e0       	ldi	r25, 0x00	; 0
    12ba:	02 c0       	rjmp	.+4      	; 0x12c0 <vfprintf+0x352>
    12bc:	88 e5       	ldi	r24, 0x58	; 88
    12be:	90 e0       	ldi	r25, 0x00	; 0
    12c0:	b6 01       	movw	r22, r12
    12c2:	0c c0       	rjmp	.+24     	; 0x12dc <vfprintf+0x36e>
    12c4:	8a 2d       	mov	r24, r10
    12c6:	86 78       	andi	r24, 0x86	; 134
    12c8:	59 f0       	breq	.+22     	; 0x12e0 <vfprintf+0x372>
    12ca:	a1 fe       	sbrs	r10, 1
    12cc:	02 c0       	rjmp	.+4      	; 0x12d2 <vfprintf+0x364>
    12ce:	8b e2       	ldi	r24, 0x2B	; 43
    12d0:	01 c0       	rjmp	.+2      	; 0x12d4 <vfprintf+0x366>
    12d2:	80 e2       	ldi	r24, 0x20	; 32
    12d4:	a7 fc       	sbrc	r10, 7
    12d6:	8d e2       	ldi	r24, 0x2D	; 45
    12d8:	b6 01       	movw	r22, r12
    12da:	90 e0       	ldi	r25, 0x00	; 0
    12dc:	0e 94 ae 09 	call	0x135c	; 0x135c <fputc>
    12e0:	89 14       	cp	r8, r9
    12e2:	38 f4       	brcc	.+14     	; 0x12f2 <vfprintf+0x384>
    12e4:	b6 01       	movw	r22, r12
    12e6:	80 e3       	ldi	r24, 0x30	; 48
    12e8:	90 e0       	ldi	r25, 0x00	; 0
    12ea:	0e 94 ae 09 	call	0x135c	; 0x135c <fputc>
    12ee:	9a 94       	dec	r9
    12f0:	f7 cf       	rjmp	.-18     	; 0x12e0 <vfprintf+0x372>
    12f2:	8a 94       	dec	r8
    12f4:	f3 01       	movw	r30, r6
    12f6:	e8 0d       	add	r30, r8
    12f8:	f1 1d       	adc	r31, r1
    12fa:	80 81       	ld	r24, Z
    12fc:	b6 01       	movw	r22, r12
    12fe:	90 e0       	ldi	r25, 0x00	; 0
    1300:	0e 94 ae 09 	call	0x135c	; 0x135c <fputc>
    1304:	81 10       	cpse	r8, r1
    1306:	f5 cf       	rjmp	.-22     	; 0x12f2 <vfprintf+0x384>
    1308:	22 20       	and	r2, r2
    130a:	09 f4       	brne	.+2      	; 0x130e <vfprintf+0x3a0>
    130c:	42 ce       	rjmp	.-892    	; 0xf92 <vfprintf+0x24>
    130e:	b6 01       	movw	r22, r12
    1310:	80 e2       	ldi	r24, 0x20	; 32
    1312:	90 e0       	ldi	r25, 0x00	; 0
    1314:	0e 94 ae 09 	call	0x135c	; 0x135c <fputc>
    1318:	2a 94       	dec	r2
    131a:	f6 cf       	rjmp	.-20     	; 0x1308 <vfprintf+0x39a>
    131c:	f6 01       	movw	r30, r12
    131e:	86 81       	ldd	r24, Z+6	; 0x06
    1320:	97 81       	ldd	r25, Z+7	; 0x07
    1322:	02 c0       	rjmp	.+4      	; 0x1328 <vfprintf+0x3ba>
    1324:	8f ef       	ldi	r24, 0xFF	; 255
    1326:	9f ef       	ldi	r25, 0xFF	; 255
    1328:	2b 96       	adiw	r28, 0x0b	; 11
    132a:	e2 e1       	ldi	r30, 0x12	; 18
    132c:	0c 94 64 0a 	jmp	0x14c8	; 0x14c8 <__epilogue_restores__>

00001330 <strnlen_P>:
    1330:	fc 01       	movw	r30, r24
    1332:	05 90       	lpm	r0, Z+
    1334:	61 50       	subi	r22, 0x01	; 1
    1336:	70 40       	sbci	r23, 0x00	; 0
    1338:	01 10       	cpse	r0, r1
    133a:	d8 f7       	brcc	.-10     	; 0x1332 <strnlen_P+0x2>
    133c:	80 95       	com	r24
    133e:	90 95       	com	r25
    1340:	8e 0f       	add	r24, r30
    1342:	9f 1f       	adc	r25, r31
    1344:	08 95       	ret

00001346 <strnlen>:
    1346:	fc 01       	movw	r30, r24
    1348:	61 50       	subi	r22, 0x01	; 1
    134a:	70 40       	sbci	r23, 0x00	; 0
    134c:	01 90       	ld	r0, Z+
    134e:	01 10       	cpse	r0, r1
    1350:	d8 f7       	brcc	.-10     	; 0x1348 <strnlen+0x2>
    1352:	80 95       	com	r24
    1354:	90 95       	com	r25
    1356:	8e 0f       	add	r24, r30
    1358:	9f 1f       	adc	r25, r31
    135a:	08 95       	ret

0000135c <fputc>:
    135c:	0f 93       	push	r16
    135e:	1f 93       	push	r17
    1360:	cf 93       	push	r28
    1362:	df 93       	push	r29
    1364:	fb 01       	movw	r30, r22
    1366:	23 81       	ldd	r18, Z+3	; 0x03
    1368:	21 fd       	sbrc	r18, 1
    136a:	03 c0       	rjmp	.+6      	; 0x1372 <fputc+0x16>
    136c:	8f ef       	ldi	r24, 0xFF	; 255
    136e:	9f ef       	ldi	r25, 0xFF	; 255
    1370:	2c c0       	rjmp	.+88     	; 0x13ca <fputc+0x6e>
    1372:	22 ff       	sbrs	r18, 2
    1374:	16 c0       	rjmp	.+44     	; 0x13a2 <fputc+0x46>
    1376:	46 81       	ldd	r20, Z+6	; 0x06
    1378:	57 81       	ldd	r21, Z+7	; 0x07
    137a:	24 81       	ldd	r18, Z+4	; 0x04
    137c:	35 81       	ldd	r19, Z+5	; 0x05
    137e:	42 17       	cp	r20, r18
    1380:	53 07       	cpc	r21, r19
    1382:	44 f4       	brge	.+16     	; 0x1394 <fputc+0x38>
    1384:	a0 81       	ld	r26, Z
    1386:	b1 81       	ldd	r27, Z+1	; 0x01
    1388:	9d 01       	movw	r18, r26
    138a:	2f 5f       	subi	r18, 0xFF	; 255
    138c:	3f 4f       	sbci	r19, 0xFF	; 255
    138e:	31 83       	std	Z+1, r19	; 0x01
    1390:	20 83       	st	Z, r18
    1392:	8c 93       	st	X, r24
    1394:	26 81       	ldd	r18, Z+6	; 0x06
    1396:	37 81       	ldd	r19, Z+7	; 0x07
    1398:	2f 5f       	subi	r18, 0xFF	; 255
    139a:	3f 4f       	sbci	r19, 0xFF	; 255
    139c:	37 83       	std	Z+7, r19	; 0x07
    139e:	26 83       	std	Z+6, r18	; 0x06
    13a0:	14 c0       	rjmp	.+40     	; 0x13ca <fputc+0x6e>
    13a2:	8b 01       	movw	r16, r22
    13a4:	ec 01       	movw	r28, r24
    13a6:	fb 01       	movw	r30, r22
    13a8:	00 84       	ldd	r0, Z+8	; 0x08
    13aa:	f1 85       	ldd	r31, Z+9	; 0x09
    13ac:	e0 2d       	mov	r30, r0
    13ae:	09 95       	icall
    13b0:	89 2b       	or	r24, r25
    13b2:	e1 f6       	brne	.-72     	; 0x136c <fputc+0x10>
    13b4:	d8 01       	movw	r26, r16
    13b6:	16 96       	adiw	r26, 0x06	; 6
    13b8:	8d 91       	ld	r24, X+
    13ba:	9c 91       	ld	r25, X
    13bc:	17 97       	sbiw	r26, 0x07	; 7
    13be:	01 96       	adiw	r24, 0x01	; 1
    13c0:	17 96       	adiw	r26, 0x07	; 7
    13c2:	9c 93       	st	X, r25
    13c4:	8e 93       	st	-X, r24
    13c6:	16 97       	sbiw	r26, 0x06	; 6
    13c8:	ce 01       	movw	r24, r28
    13ca:	df 91       	pop	r29
    13cc:	cf 91       	pop	r28
    13ce:	1f 91       	pop	r17
    13d0:	0f 91       	pop	r16
    13d2:	08 95       	ret

000013d4 <__ultoa_invert>:
    13d4:	fa 01       	movw	r30, r20
    13d6:	aa 27       	eor	r26, r26
    13d8:	28 30       	cpi	r18, 0x08	; 8
    13da:	51 f1       	breq	.+84     	; 0x1430 <__ultoa_invert+0x5c>
    13dc:	20 31       	cpi	r18, 0x10	; 16
    13de:	81 f1       	breq	.+96     	; 0x1440 <__ultoa_invert+0x6c>
    13e0:	e8 94       	clt
    13e2:	6f 93       	push	r22
    13e4:	6e 7f       	andi	r22, 0xFE	; 254
    13e6:	6e 5f       	subi	r22, 0xFE	; 254
    13e8:	7f 4f       	sbci	r23, 0xFF	; 255
    13ea:	8f 4f       	sbci	r24, 0xFF	; 255
    13ec:	9f 4f       	sbci	r25, 0xFF	; 255
    13ee:	af 4f       	sbci	r26, 0xFF	; 255
    13f0:	b1 e0       	ldi	r27, 0x01	; 1
    13f2:	3e d0       	rcall	.+124    	; 0x1470 <__ultoa_invert+0x9c>
    13f4:	b4 e0       	ldi	r27, 0x04	; 4
    13f6:	3c d0       	rcall	.+120    	; 0x1470 <__ultoa_invert+0x9c>
    13f8:	67 0f       	add	r22, r23
    13fa:	78 1f       	adc	r23, r24
    13fc:	89 1f       	adc	r24, r25
    13fe:	9a 1f       	adc	r25, r26
    1400:	a1 1d       	adc	r26, r1
    1402:	68 0f       	add	r22, r24
    1404:	79 1f       	adc	r23, r25
    1406:	8a 1f       	adc	r24, r26
    1408:	91 1d       	adc	r25, r1
    140a:	a1 1d       	adc	r26, r1
    140c:	6a 0f       	add	r22, r26
    140e:	71 1d       	adc	r23, r1
    1410:	81 1d       	adc	r24, r1
    1412:	91 1d       	adc	r25, r1
    1414:	a1 1d       	adc	r26, r1
    1416:	20 d0       	rcall	.+64     	; 0x1458 <__ultoa_invert+0x84>
    1418:	09 f4       	brne	.+2      	; 0x141c <__ultoa_invert+0x48>
    141a:	68 94       	set
    141c:	3f 91       	pop	r19
    141e:	2a e0       	ldi	r18, 0x0A	; 10
    1420:	26 9f       	mul	r18, r22
    1422:	11 24       	eor	r1, r1
    1424:	30 19       	sub	r19, r0
    1426:	30 5d       	subi	r19, 0xD0	; 208
    1428:	31 93       	st	Z+, r19
    142a:	de f6       	brtc	.-74     	; 0x13e2 <__ultoa_invert+0xe>
    142c:	cf 01       	movw	r24, r30
    142e:	08 95       	ret
    1430:	46 2f       	mov	r20, r22
    1432:	47 70       	andi	r20, 0x07	; 7
    1434:	40 5d       	subi	r20, 0xD0	; 208
    1436:	41 93       	st	Z+, r20
    1438:	b3 e0       	ldi	r27, 0x03	; 3
    143a:	0f d0       	rcall	.+30     	; 0x145a <__ultoa_invert+0x86>
    143c:	c9 f7       	brne	.-14     	; 0x1430 <__ultoa_invert+0x5c>
    143e:	f6 cf       	rjmp	.-20     	; 0x142c <__ultoa_invert+0x58>
    1440:	46 2f       	mov	r20, r22
    1442:	4f 70       	andi	r20, 0x0F	; 15
    1444:	40 5d       	subi	r20, 0xD0	; 208
    1446:	4a 33       	cpi	r20, 0x3A	; 58
    1448:	18 f0       	brcs	.+6      	; 0x1450 <__ultoa_invert+0x7c>
    144a:	49 5d       	subi	r20, 0xD9	; 217
    144c:	31 fd       	sbrc	r19, 1
    144e:	40 52       	subi	r20, 0x20	; 32
    1450:	41 93       	st	Z+, r20
    1452:	02 d0       	rcall	.+4      	; 0x1458 <__ultoa_invert+0x84>
    1454:	a9 f7       	brne	.-22     	; 0x1440 <__ultoa_invert+0x6c>
    1456:	ea cf       	rjmp	.-44     	; 0x142c <__ultoa_invert+0x58>
    1458:	b4 e0       	ldi	r27, 0x04	; 4
    145a:	a6 95       	lsr	r26
    145c:	97 95       	ror	r25
    145e:	87 95       	ror	r24
    1460:	77 95       	ror	r23
    1462:	67 95       	ror	r22
    1464:	ba 95       	dec	r27
    1466:	c9 f7       	brne	.-14     	; 0x145a <__ultoa_invert+0x86>
    1468:	00 97       	sbiw	r24, 0x00	; 0
    146a:	61 05       	cpc	r22, r1
    146c:	71 05       	cpc	r23, r1
    146e:	08 95       	ret
    1470:	9b 01       	movw	r18, r22
    1472:	ac 01       	movw	r20, r24
    1474:	0a 2e       	mov	r0, r26
    1476:	06 94       	lsr	r0
    1478:	57 95       	ror	r21
    147a:	47 95       	ror	r20
    147c:	37 95       	ror	r19
    147e:	27 95       	ror	r18
    1480:	ba 95       	dec	r27
    1482:	c9 f7       	brne	.-14     	; 0x1476 <__ultoa_invert+0xa2>
    1484:	62 0f       	add	r22, r18
    1486:	73 1f       	adc	r23, r19
    1488:	84 1f       	adc	r24, r20
    148a:	95 1f       	adc	r25, r21
    148c:	a0 1d       	adc	r26, r0
    148e:	08 95       	ret

00001490 <__prologue_saves__>:
    1490:	2f 92       	push	r2
    1492:	3f 92       	push	r3
    1494:	4f 92       	push	r4
    1496:	5f 92       	push	r5
    1498:	6f 92       	push	r6
    149a:	7f 92       	push	r7
    149c:	8f 92       	push	r8
    149e:	9f 92       	push	r9
    14a0:	af 92       	push	r10
    14a2:	bf 92       	push	r11
    14a4:	cf 92       	push	r12
    14a6:	df 92       	push	r13
    14a8:	ef 92       	push	r14
    14aa:	ff 92       	push	r15
    14ac:	0f 93       	push	r16
    14ae:	1f 93       	push	r17
    14b0:	cf 93       	push	r28
    14b2:	df 93       	push	r29
    14b4:	cd b7       	in	r28, 0x3d	; 61
    14b6:	de b7       	in	r29, 0x3e	; 62
    14b8:	ca 1b       	sub	r28, r26
    14ba:	db 0b       	sbc	r29, r27
    14bc:	0f b6       	in	r0, 0x3f	; 63
    14be:	f8 94       	cli
    14c0:	de bf       	out	0x3e, r29	; 62
    14c2:	0f be       	out	0x3f, r0	; 63
    14c4:	cd bf       	out	0x3d, r28	; 61
    14c6:	09 94       	ijmp

000014c8 <__epilogue_restores__>:
    14c8:	2a 88       	ldd	r2, Y+18	; 0x12
    14ca:	39 88       	ldd	r3, Y+17	; 0x11
    14cc:	48 88       	ldd	r4, Y+16	; 0x10
    14ce:	5f 84       	ldd	r5, Y+15	; 0x0f
    14d0:	6e 84       	ldd	r6, Y+14	; 0x0e
    14d2:	7d 84       	ldd	r7, Y+13	; 0x0d
    14d4:	8c 84       	ldd	r8, Y+12	; 0x0c
    14d6:	9b 84       	ldd	r9, Y+11	; 0x0b
    14d8:	aa 84       	ldd	r10, Y+10	; 0x0a
    14da:	b9 84       	ldd	r11, Y+9	; 0x09
    14dc:	c8 84       	ldd	r12, Y+8	; 0x08
    14de:	df 80       	ldd	r13, Y+7	; 0x07
    14e0:	ee 80       	ldd	r14, Y+6	; 0x06
    14e2:	fd 80       	ldd	r15, Y+5	; 0x05
    14e4:	0c 81       	ldd	r16, Y+4	; 0x04
    14e6:	1b 81       	ldd	r17, Y+3	; 0x03
    14e8:	aa 81       	ldd	r26, Y+2	; 0x02
    14ea:	b9 81       	ldd	r27, Y+1	; 0x01
    14ec:	ce 0f       	add	r28, r30
    14ee:	d1 1d       	adc	r29, r1
    14f0:	0f b6       	in	r0, 0x3f	; 63
    14f2:	f8 94       	cli
    14f4:	de bf       	out	0x3e, r29	; 62
    14f6:	0f be       	out	0x3f, r0	; 63
    14f8:	cd bf       	out	0x3d, r28	; 61
    14fa:	ed 01       	movw	r28, r26
    14fc:	08 95       	ret

000014fe <_exit>:
    14fe:	f8 94       	cli

00001500 <__stop_program>:
    1500:	ff cf       	rjmp	.-2      	; 0x1500 <__stop_program>
